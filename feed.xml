<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://codehax.ru/feed.xml" rel="self" type="application/atom+xml" /><link href="https://codehax.ru/" rel="alternate" type="text/html" /><updated>2020-01-31T18:13:27+04:00</updated><id>https://codehax.ru/feed.xml</id><title type="html">CodehaX - Новости из мира IT</title><subtitle>Новости электроники, технологий, современных гаджетов и другая актуальная информация современной IT индустрии</subtitle><entry><title type="html">32 совета для каждого веб-разработчика в 2020 году</title><link href="https://codehax.ru/blog/coding/2020-01-09-32-soveta-dlya-kazhdogo-veb-razrabotchika-v-2020.html" rel="alternate" type="text/html" title="32 совета для каждого веб-разработчика в 2020 году" /><published>2020-01-09T00:00:00+04:00</published><updated>2020-01-09T00:00:00+04:00</updated><id>https://codehax.ru/blog/coding/32-soveta-dlya-kazhdogo-veb-razrabotchika-v-2020</id><content type="html" xml:base="https://codehax.ru/blog/coding/2020-01-09-32-soveta-dlya-kazhdogo-veb-razrabotchika-v-2020.html">&lt;h2&gt;Идеи, которые помогут вам подняться в этом году&lt;/h2&gt;

&lt;p&gt;2019 год закончился, и это был год с множеством проблем и возможностей для разработчиков, таких как вы и я. Нам есть чему поучиться и освоить - у нас есть JavaScript-фреймворки, такие как React, Vue, Angular и Svelte. У нас есть статические генераторы сайтов, JAMstack, serverless, Git, и этот список можно продолжить.&lt;/p&gt;

&lt;p&gt;Несмотря на то, что в широкой экосистеме веб-разработки есть что-то для каждого, может быть очень сложно отслеживать постоянно меняющиеся технологии. И не только это, но есть и другие вопросы, на которые вы можете ответить: где я хочу работать и с кем? Хочу ли я стать разработчиком полного стека? Хочу ли я работать на постоянной должности или пойти на контракт? Как я могу развить себя и приобрести новые навыки?&lt;/p&gt;

&lt;p&gt;Я поделился своими знаниями и опытом с этими 32 советами, которые могут помочь вам в вашей карьере веб-разработчика в 2020 году. Независимо от того, начинаете ли вы или уже имеете некоторый опыт, эти советы помогут вам. Этот список ни в коем случае не является полным, и, конечно, не каждый пункт будет идеально подходить, но я надеюсь, что вы можете выбрать некоторые из них для вдохновения или руководства.&lt;/p&gt;

&lt;h3&gt;Советы, чтобы помочь веб-разработчикам в 2020 году&lt;/h3&gt;

&lt;h4&gt;1. Попытайтесь понять концепции Git&lt;/h4&gt;

&lt;p&gt;Знание основных команд - это хорошо, но постарайтесь также понять основополагающие концепций.&lt;/p&gt;

&lt;h4&gt;2. Изучите концепции чистого кода&lt;/h4&gt;

&lt;p&gt;Понимание философии чистого кода помогает вам создавать лучший, более читаемый код с меньшим количеством сбоев.&lt;/p&gt;

&lt;h4&gt;3. Создайте сайт портфолио&lt;/h4&gt;

&lt;p&gt;Вы должны гордиться своей работой и поделиться ею с другими и дать будущим работодателям и клиентам возможность нанять вас.&lt;/p&gt;

&lt;h4&gt;4. Написать технический пост в блоге&lt;/h4&gt;

&lt;p&gt;Написание поста в блоге имеет несколько преимуществ. Изучать новые вещи часто легче, если вы пытаетесь объяснить то, что вы изучаете, другим. И отдача сообществу - отличный шаг.&lt;/p&gt;

&lt;h4&gt;5. Получите свою первую фриланс работенку&lt;/h4&gt;

&lt;p&gt;Сделайте 2020 год годом перемены в карьере и получите первую контрактную работу. Посмотрите веб-платформы, которые предлагают возможности для проектов, свяжитесь с нанимателями, посетите общественные мероприятия и конференции или узнайте, не хочет ли ваш работодатель нанять вас в качестве фрилансера.&lt;/p&gt;

&lt;h4&gt;6. Изучите основы JavaScript&lt;/h4&gt;

&lt;p&gt;JavaScript управляет Интернетом. И JavaScript, вероятно, все еще будет присутствовать, в то время как фреймворки, такие как React и Vue, приходят и уходят. Так что инвестируйте в изучение основ JavaScript.&lt;/p&gt;

&lt;h4&gt;7. Изучите один большой JavaScript-фреймворк&lt;/h4&gt;

&lt;p&gt;Современные веб-приложения часто работают на таких платформах, как Vue, React или Angular. Такие компании, как Facebook, Google и Airbnb поддерживают и используют их. Так что, как разработчик внешнего интерфейса, вы должны хотя бы знать один из них. Но, в конце концов, это просто JavaScript.&lt;/p&gt;

&lt;h4&gt;8. Попытайтесь перейти на руководящую должность&lt;/h4&gt;

&lt;p&gt;Узнайте, что нужно, чтобы стать старшим разработчиком. Помимо опыта, очень важно иметь мягкие навыки, такие как сочувствие и отличные коммуникативные навыки.&lt;/p&gt;

&lt;h4&gt;9. Наставник младших разработчиков&lt;/h4&gt;

&lt;p&gt;Самый важный результат старшего разработчика - больше старших разработчиков. Поэтому старайтесь помогать обучать других, не будучи властными.&lt;/p&gt;

&lt;h4&gt;10. Создать руководство для других&lt;/h4&gt;

&lt;p&gt;Если вы изучили новый язык программирования, функцию или технологию, поделитесь своими знаниями с другими.&lt;/p&gt;

&lt;h4&gt;11. Попробуйте VS Code и его расширения&lt;/h4&gt;

&lt;p&gt;Если вы не использовали VS Code в качестве основной IDE, обязательно попробуйте его. Он сделает вас намного более продуктивным разработчиком, и у него будет много замечательных расширений, таких как форматирование кода и стилизация или автозаполнение.&lt;/p&gt;

&lt;h4&gt;12. Оставьте токсичное рабочее место&lt;/h4&gt;

&lt;p&gt;Если вы работаете в токсичном месте или у вас токсичный начальник, ищите другие возможности работы. Люди, как правило, не меняются, а ваш талант слишком хорош, чтобы тратить его впустую. Ищите того, кто может оценить вас и ваши навыки.&lt;/p&gt;

&lt;h4&gt;13. Вклад в проекты с открытым исходным кодом&lt;/h4&gt;

&lt;p&gt;Участие в разработке с открытым исходным кодом, вероятно, то, о чем думал каждый разработчик. Вы можете привлекать и помогать сообществу, практиковаться в программировании в реальных условиях и добавлять его в свое портфолио. Многие OSS проекты приветствуют новых пользователей, которые могут добавлять проекты в свои репозитории.&lt;/p&gt;

&lt;h4&gt;14. Изучите принципиально другой язык программирования&lt;/h4&gt;

&lt;p&gt;Чтобы расширить свой кругозор и выйти из своей зоны комфорта, было бы неплохо выучить совершенно другой язык программирования. Например, если вы обычно используете Java, попробуйте JavaScript, Rust или Golang. Попробуйте то, с чем вы никогда раньше не работали.&lt;/p&gt;

&lt;h4&gt;15. Разверните функцию без сервера&lt;/h4&gt;

&lt;p&gt;Бессерверные функции - это небольшие программные функции с единственной целью, которые размещаются в управляемой инфраструктуре. Например, вы можете использовать AWS Lambda для их размещения. Многие проекты используют их, и поэтому стоит попробовать.&lt;/p&gt;

&lt;h4&gt;16. Изучите концепции GraphQL&lt;/h4&gt;

&lt;p&gt;RESTful API были стандартом де-факто для веб-разработки в последние годы. Но с ростом GraphQL в Facebook вы, безусловно, должны попытаться изучить концепции, лежащие в его основе.&lt;/p&gt;

&lt;h4&gt;17. Создайте приложение JAMstack&lt;/h4&gt;

&lt;p&gt;JavaScript, API и Markup - приложения, состоящие из этих технологий, составляют JAMstack. JAMstack является мощным, легким и независимым от специализированных бэкэндов. Например, хорошо подходит для корпоративных сайтов или вашего портфолио.&lt;/p&gt;

&lt;h4&gt;18. Посмотрите на OWASP Top 10&lt;/h4&gt;

&lt;p&gt;Проекты Open Web Application Security Project содержат рекомендации и передовую практику по разработке безопасных приложений.&lt;/p&gt;

&lt;h4&gt;19. Больше занимайтесь парным программированием&lt;/h4&gt;

&lt;p&gt;Парное программирование - один из лучших способов обмена знаниями между программистами. Вы можете учиться у более опытных разработчиков или помочь более молодым разработчикам. В любом случае, это хорошо и помогает вам оставаться сосредоточенным.&lt;/p&gt;

&lt;h4&gt;20. Согласитесь на проверку кода&lt;/h4&gt;

&lt;p&gt;Проверка кода является обязательной во многих проектах и требуется многими корпорациями до слияния кода. Вы должны участвовать в таких обзорах довольно часто. Если вы новичок, вы можете узнать, просмотрев код других разработчиков и задать им вопросы об этом. Если вы опытнее, это поможет уменьшить количество ошибок в коде.&lt;/p&gt;

&lt;h4&gt;21. Сфокусируйтесь на решении проблем&lt;/h4&gt;

&lt;p&gt;Одна вещь, которая делает хорошего (старшего) разработчика, это способность сосредоточиться на решениях, а не зацикливаться на проблемах. Всегда старайтесь найти способы справиться с проблемами.&lt;/p&gt;

&lt;h4&gt;22. Научитесь отлаживать&lt;/h4&gt;

&lt;p&gt;Программный код никогда не будет идеальным. Будут баги и ошибки, это точно. Но чтобы найти и исправить их, вам нужно научиться отлаживать код&lt;/p&gt;

&lt;h4&gt;23. Не недооценивай себя&lt;/h4&gt;

&lt;p&gt;Одна вещь, которую я всегда должен напоминать себе, это то, что я стою тех денег, которые я беру с клиента или запрашиваю у работодателя. Все навыки, которые вы приобрели, все часы, которые вы потратили на программирование, и ваша ценная личность должны дать вам уверенность в переговорах в вашу пользу.&lt;/p&gt;

&lt;h4&gt;24. Учитесь на своих ошибках&lt;/h4&gt;

&lt;p&gt;Все совершают ошибки. Даже самые успешные разработчики делают много ошибок. Но важно то, что вы учитесь на этих ошибках, чтобы расти - как в своих навыках разработчика, так и в личной жизни.&lt;/p&gt;

&lt;h4&gt;25. Всегда проверяйте свой код&lt;/h4&gt;

&lt;p&gt;Написание тестов для вашего кода, будь то модульные тесты или интеграционные тесты, кажется, требует дополнительной работы, и вы можете подумать, что код, который вы пишете, идеален и в любом случае без ошибок. Это ошибка. Почти все корпорации и проекты с открытым исходным кодом ожидают, что вы протестируете свой код. И вы должны делать это даже в своих личных проектах, чтобы положиться на него.&lt;/p&gt;

&lt;h4&gt;26. Изучите шаблоны проектирования&lt;/h4&gt;

&lt;p&gt;Шаблоны проектирования являются строительными блоками для разработки программных приложений. Они не обязательно вам понадобятся в каждом проекте, но полезно знать некоторые из основных.&lt;/p&gt;

&lt;h4&gt;27. Не стесняйтесь обращаться за помощью&lt;/h4&gt;

&lt;p&gt;В обращении за помощью нет ничего плохого. Тем не менее, всегда полезно попробовать что-то самостоятельно, прежде чем просить кого-то помочь вам. Но в целом, если вы застряли, обратитесь к тому, кто может вам помочь.&lt;/p&gt;

&lt;h4&gt;28. Посетить техническую конференцию&lt;/h4&gt;

&lt;p&gt;Посещение конференций - отличный способ узнать о новых технологиях и пообщаться с сообществом. Довольно часто работодатели предлагают своим сотрудникам скидки или платят за них, если они возвращают знания и делятся ими со своими коллегами.&lt;/p&gt;

&lt;h4&gt;29. Выступить на технической конференции&lt;/h4&gt;

&lt;p&gt;Если у вас есть такая возможность, вам следует поговорить на интересующую вас тему на конференции. Даже если вы замкнутый человек, это поможет вам обрести уверенность.&lt;/p&gt;

&lt;h4&gt;30. Старайтесь оставаться актуальными&lt;/h4&gt;

&lt;p&gt;Это легче сказать, чем сделать, но для того, чтобы отслеживать быстро меняющийся мир технологий, вам необходимо постоянно учиться и совершенствовать свои навыки. Читайте сообщения в блогах, посещайте конференции, смотрите видео, подписывайтесь на информационные бюллетени, читайте книги, посещайте (офлайн) курсы. Есть бесчисленные возможности.&lt;/p&gt;

&lt;h4&gt;31. Будьте непредубежденными&lt;/h4&gt;

&lt;p&gt;Ничто не является само собой разумеющимся. Ни технологии, ни фреймворки, ни библиотеки. Вы должны постоянно адаптироваться, чтобы добиться успеха в этой отрасли. Но не только непредубежденность имеет значение для технологии - люди, вот, что важно.&lt;/p&gt;

&lt;h4&gt;32. Никогда не сдавайся&lt;/h4&gt;

&lt;p&gt;Всем знакома эта борьба - иногда больше, иногда меньше. Не всегда будет легко. Но вы не одиноки, и мы все начали где-то. Ты справишься!&lt;/p&gt;

&lt;p&gt;Вот и все. Я надеюсь, что вы сможете извлечь что-то из этого списка, и я желаю вам всего наилучшего в 2020 году!&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://medium.com/better-programming/32-tips-for-every-web-developer-in-2020-782fd6554f0d&quot; target=&quot;_blank&quot;&gt;&amp;laquo;32 Tips For Every Web Developer In 2020&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Идеи, которые помогут вам подняться в этом году 2019 год закончился, и это был год с множеством проблем и возможностей для разработчиков, таких как вы и я. Нам есть чему поучиться и освоить - у нас есть JavaScript-фреймворки, такие как React, Vue, Angular и Svelte. У нас есть статические генераторы сайтов, JAMstack, serverless, Git, и этот список можно продолжить. Несмотря на то, что в широкой экосистеме веб-разработки есть что-то для каждого, может быть очень сложно отслеживать постоянно меняющиеся технологии. И не только это, но есть и другие вопросы, на которые вы можете ответить: где я хочу работать и с кем? Хочу ли я стать разработчиком полного стека? Хочу ли я работать на постоянной должности или пойти на контракт? Как я могу развить себя и приобрести новые навыки? Я поделился своими знаниями и опытом с этими 32 советами, которые могут помочь вам в вашей карьере веб-разработчика в 2020 году. Независимо от того, начинаете ли вы или уже имеете некоторый опыт, эти советы помогут вам. Этот список ни в коем случае не является полным, и, конечно, не каждый пункт будет идеально подходить, но я надеюсь, что вы можете выбрать некоторые из них для вдохновения или руководства. Советы, чтобы помочь веб-разработчикам в 2020 году 1. Попытайтесь понять концепции Git Знание основных команд - это хорошо, но постарайтесь также понять основополагающие концепций. 2. Изучите концепции чистого кода Понимание философии чистого кода помогает вам создавать лучший, более читаемый код с меньшим количеством сбоев. 3. Создайте сайт портфолио Вы должны гордиться своей работой и поделиться ею с другими и дать будущим работодателям и клиентам возможность нанять вас. 4. Написать технический пост в блоге Написание поста в блоге имеет несколько преимуществ. Изучать новые вещи часто легче, если вы пытаетесь объяснить то, что вы изучаете, другим. И отдача сообществу - отличный шаг. 5. Получите свою первую фриланс работенку Сделайте 2020 год годом перемены в карьере и получите первую контрактную работу. Посмотрите веб-платформы, которые предлагают возможности для проектов, свяжитесь с нанимателями, посетите общественные мероприятия и конференции или узнайте, не хочет ли ваш работодатель нанять вас в качестве фрилансера. 6. Изучите основы JavaScript JavaScript управляет Интернетом. И JavaScript, вероятно, все еще будет присутствовать, в то время как фреймворки, такие как React и Vue, приходят и уходят. Так что инвестируйте в изучение основ JavaScript. 7. Изучите один большой JavaScript-фреймворк Современные веб-приложения часто работают на таких платформах, как Vue, React или Angular. Такие компании, как Facebook, Google и Airbnb поддерживают и используют их. Так что, как разработчик внешнего интерфейса, вы должны хотя бы знать один из них. Но, в конце концов, это просто JavaScript. 8. Попытайтесь перейти на руководящую должность Узнайте, что нужно, чтобы стать старшим разработчиком. Помимо опыта, очень важно иметь мягкие навыки, такие как сочувствие и отличные коммуникативные навыки. 9. Наставник младших разработчиков Самый важный результат старшего разработчика - больше старших разработчиков. Поэтому старайтесь помогать обучать других, не будучи властными. 10. Создать руководство для других Если вы изучили новый язык программирования, функцию или технологию, поделитесь своими знаниями с другими. 11. Попробуйте VS Code и его расширения Если вы не использовали VS Code в качестве основной IDE, обязательно попробуйте его. Он сделает вас намного более продуктивным разработчиком, и у него будет много замечательных расширений, таких как форматирование кода и стилизация или автозаполнение. 12. Оставьте токсичное рабочее место Если вы работаете в токсичном месте или у вас токсичный начальник, ищите другие возможности работы. Люди, как правило, не меняются, а ваш талант слишком хорош, чтобы тратить его впустую. Ищите того, кто может оценить вас и ваши навыки. 13. Вклад в проекты с открытым исходным кодом Участие в разработке с открытым исходным кодом, вероятно, то, о чем думал каждый разработчик. Вы можете привлекать и помогать сообществу, практиковаться в программировании в реальных условиях и добавлять его в свое портфолио. Многие OSS проекты приветствуют новых пользователей, которые могут добавлять проекты в свои репозитории. 14. Изучите принципиально другой язык программирования Чтобы расширить свой кругозор и выйти из своей зоны комфорта, было бы неплохо выучить совершенно другой язык программирования. Например, если вы обычно используете Java, попробуйте JavaScript, Rust или Golang. Попробуйте то, с чем вы никогда раньше не работали. 15. Разверните функцию без сервера Бессерверные функции - это небольшие программные функции с единственной целью, которые размещаются в управляемой инфраструктуре. Например, вы можете использовать AWS Lambda для их размещения. Многие проекты используют их, и поэтому стоит попробовать. 16. Изучите концепции GraphQL RESTful API были стандартом де-факто для веб-разработки в последние годы. Но с ростом GraphQL в Facebook вы, безусловно, должны попытаться изучить концепции, лежащие в его основе. 17. Создайте приложение JAMstack JavaScript, API и Markup - приложения, состоящие из этих технологий, составляют JAMstack. JAMstack является мощным, легким и независимым от специализированных бэкэндов. Например, хорошо подходит для корпоративных сайтов или вашего портфолио. 18. Посмотрите на OWASP Top 10 Проекты Open Web Application Security Project содержат рекомендации и передовую практику по разработке безопасных приложений. 19. Больше занимайтесь парным программированием Парное программирование - один из лучших способов обмена знаниями между программистами. Вы можете учиться у более опытных разработчиков или помочь более молодым разработчикам. В любом случае, это хорошо и помогает вам оставаться сосредоточенным. 20. Согласитесь на проверку кода Проверка кода является обязательной во многих проектах и требуется многими корпорациями до слияния кода. Вы должны участвовать в таких обзорах довольно часто. Если вы новичок, вы можете узнать, просмотрев код других разработчиков и задать им вопросы об этом. Если вы опытнее, это поможет уменьшить количество ошибок в коде. 21. Сфокусируйтесь на решении проблем Одна вещь, которая делает хорошего (старшего) разработчика, это способность сосредоточиться на решениях, а не зацикливаться на проблемах. Всегда старайтесь найти способы справиться с проблемами. 22. Научитесь отлаживать Программный код никогда не будет идеальным. Будут баги и ошибки, это точно. Но чтобы найти и исправить их, вам нужно научиться отлаживать код 23. Не недооценивай себя Одна вещь, которую я всегда должен напоминать себе, это то, что я стою тех денег, которые я беру с клиента или запрашиваю у работодателя. Все навыки, которые вы приобрели, все часы, которые вы потратили на программирование, и ваша ценная личность должны дать вам уверенность в переговорах в вашу пользу. 24. Учитесь на своих ошибках Все совершают ошибки. Даже самые успешные разработчики делают много ошибок. Но важно то, что вы учитесь на этих ошибках, чтобы расти - как в своих навыках разработчика, так и в личной жизни. 25. Всегда проверяйте свой код Написание тестов для вашего кода, будь то модульные тесты или интеграционные тесты, кажется, требует дополнительной работы, и вы можете подумать, что код, который вы пишете, идеален и в любом случае без ошибок. Это ошибка. Почти все корпорации и проекты с открытым исходным кодом ожидают, что вы протестируете свой код. И вы должны делать это даже в своих личных проектах, чтобы положиться на него. 26. Изучите шаблоны проектирования Шаблоны проектирования являются строительными блоками для разработки программных приложений. Они не обязательно вам понадобятся в каждом проекте, но полезно знать некоторые из основных. 27. Не стесняйтесь обращаться за помощью В обращении за помощью нет ничего плохого. Тем не менее, всегда полезно попробовать что-то самостоятельно, прежде чем просить кого-то помочь вам. Но в целом, если вы застряли, обратитесь к тому, кто может вам помочь. 28. Посетить техническую конференцию Посещение конференций - отличный способ узнать о новых технологиях и пообщаться с сообществом. Довольно часто работодатели предлагают своим сотрудникам скидки или платят за них, если они возвращают знания и делятся ими со своими коллегами. 29. Выступить на технической конференции Если у вас есть такая возможность, вам следует поговорить на интересующую вас тему на конференции. Даже если вы замкнутый человек, это поможет вам обрести уверенность. 30. Старайтесь оставаться актуальными Это легче сказать, чем сделать, но для того, чтобы отслеживать быстро меняющийся мир технологий, вам необходимо постоянно учиться и совершенствовать свои навыки. Читайте сообщения в блогах, посещайте конференции, смотрите видео, подписывайтесь на информационные бюллетени, читайте книги, посещайте (офлайн) курсы. Есть бесчисленные возможности. 31. Будьте непредубежденными Ничто не является само собой разумеющимся. Ни технологии, ни фреймворки, ни библиотеки. Вы должны постоянно адаптироваться, чтобы добиться успеха в этой отрасли. Но не только непредубежденность имеет значение для технологии - люди, вот, что важно. 32. Никогда не сдавайся Всем знакома эта борьба - иногда больше, иногда меньше. Не всегда будет легко. Но вы не одиноки, и мы все начали где-то. Ты справишься! Вот и все. Я надеюсь, что вы сможете извлечь что-то из этого списка, и я желаю вам всего наилучшего в 2020 году! Перевод статьи &amp;laquo;32 Tips For Every Web Developer In 2020&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/coding/32-soveta-dlya-kazhdogo-veb-razrabotchika-v-2020/1.jpg" /></entry><entry><title type="html">12 бесплатных Новогодних шрифтов для распространения Новогоднего духа</title><link href="https://codehax.ru/blog/graphic/2019-12-05-12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha.html" rel="alternate" type="text/html" title="12 бесплатных Новогодних шрифтов для распространения Новогоднего духа" /><published>2019-12-05T00:00:00+04:00</published><updated>2019-12-05T00:00:00+04:00</updated><id>https://codehax.ru/blog/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha</id><content type="html" xml:base="https://codehax.ru/blog/graphic/2019-12-05-12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha.html">&lt;p&gt;Пришло время начать готовиться к Новогодним проектам, если вы еще этого не сделали!&lt;/p&gt;

&lt;p&gt;Мы предоставили вам то, что мы считаем &lt;a href=&quot;https://codehax.ru/blog/graphic/2019-11-21-kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov.html&quot;&gt;окончательным списком бесплатных Новогодних ресурсов по дизайну&lt;/a&gt; несколько недель назад, но я сохранил лучшее напоследок.&lt;/p&gt;

&lt;p&gt;Бесплатные Новогодние шрифты!&lt;/p&gt;

&lt;p&gt;Я нашел множество бесплатных Новогодних шрифтов, чтобы помочь вам распространять настроение в этом году через ваши дизайны, но я выбрал свои любимые для этого списка.&lt;/p&gt;

&lt;p&gt;12 бесплатных Новогодних шрифтов для вас&lt;/p&gt;

&lt;p&gt;Приготовьтесь к этому удивительному списку бесплатных Новогодних шрифтов!&lt;/p&gt;

&lt;h3&gt;Grinched&lt;/h3&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/grinched-1.png&quot; alt=&quot;grinched&quot;&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/grinched-2.png&quot; alt=&quot;grinched&quot;&gt;
&lt;/figure&gt;

&lt;p&gt;Все узнают этот шрифт как тот из книги и фильма &amp;laquo;Гринч&amp;raquo;. Это Рождество идеально подходит для вас, его можно использовать бесплатно как для личного пользования, так и для коммерческого, вам необходимо только связаться с владельцем.&lt;/p&gt;

&lt;p&gt;Я думаю, что этот шрифт всегда будет моим любимым Новогодним шрифтом.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/grinched-font.html&quot;&gt;https://www.1001fonts.com/grinched-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Beyond Wonderland&lt;/h3&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/beyond-wonderland-1.jpg&quot; alt=&quot;beyond-wonderland&quot;&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/beyond-wonderland-2.png&quot; alt=&quot;beyond-wonderland&quot;&gt;
&lt;/figure&gt;

&lt;p&gt;Этот шрифт прямо кричит зимой. В самом шрифте, похоже, идет снег!&lt;/p&gt;

&lt;p&gt;Этот рукописный шрифт является бесплатным для личного использования, и вы можете связаться с владельцем для коммерческого использования.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/beyond-wonderland-font.html&quot;&gt;https://www.1001fonts.com/beyond-wonderland-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;The Gingerbread House&lt;/h3&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/the-gingerbread-house-1.png&quot; alt=&quot;the-gingerbread-house&quot;&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/the-gingerbread-house-2.png&quot; alt=&quot;the-gingerbread-house&quot;&gt;
&lt;/figure&gt;

&lt;p&gt;Далее у нас есть этот кудрявый рукописный Новогодний шрифт под названием &amp;laquo;Пряничный домик&amp;raquo;.&lt;/p&gt;

&lt;p&gt;Рукописные шрифты на Новый год являются обязательным условием. Это вызывает некоторую ностальгию, и каждый, даже люди, абсолютно не имеющие дизайнерских навыков, могут признать, что этот шрифт - Новогодний.&lt;/p&gt;

&lt;p&gt;Этот шрифт бесплатный для личного использования.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/the-gingerbread-house-font.html&quot;&gt;https://www.1001fonts.com/the-gingerbread-house-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Candy Time&lt;/h3&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/candytime-1.png&quot; alt=&quot;candytime&quot;&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/candytime-2.png&quot; alt=&quot;candytime&quot;&gt;
&lt;/figure&gt;

&lt;p&gt;&amp;laquo;Сладкий час&amp;raquo; выглядит очень вкусно.&lt;/p&gt;

&lt;p&gt;Этот Новогодний шрифт из карамельных тросточек идеально подойдет для любого типа кулинарного проекта или проекта для игры для детей, или для чего угодно, к чему вы прикладываете свои творческие способности и ум.&lt;/p&gt;

&lt;p&gt;Этот шрифт очень универсален и идеально подходит для сезона.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/candytime-font.html&quot;&gt;https://www.1001fonts.com/candytime-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Frosty&lt;/h3&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/frosty-1.jpg&quot; alt=&quot;frosty&quot;&gt;
	&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/frosty-2.jpg&quot; alt=&quot;frosty&quot;&gt;
&lt;/figure&gt;

&lt;p&gt;Этот шрифт кажется таким волшебным и является идеальным воплощением зимы.&lt;/p&gt;

&lt;p&gt;Шрифт полон символов и буквально имеет маленькие снежинки, плавающие среди букв.&lt;/p&gt;

&lt;p&gt;Этот шрифт идеально подходит для Новогоднего сезона.&lt;/p&gt;

&lt;p&gt;Этот шрифт также бесплатен для личного и коммерческого использования.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/frosty-font.html&quot;&gt;https://www.1001fonts.com/frosty-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Cane Letters&lt;/h3&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/cane-letters.png&quot; alt=&quot;cane-letters&quot;&gt;

&lt;p&gt;Еще один потрясающий бесплатный Новогодний шрифт для вас.&lt;/p&gt;

&lt;p&gt;Этот шрифт испускает 3D-эффект из-за трости, скрывающей буквы.&lt;/p&gt;

&lt;p&gt;Очень праздничный, милый и Новогодний.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/kr-cane-letters-font.html&quot;&gt;https://www.1001fonts.com/kr-cane-letters-font.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;ad-article&quot;&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block; text-align:center;&quot;
     data-ad-layout=&quot;in-article&quot;
     data-ad-format=&quot;fluid&quot;
     data-ad-client=&quot;ca-pub-8291473972193166&quot;
     data-ad-slot=&quot;9506016869&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;

&lt;/div&gt;

&lt;h3&gt;Oh Christmas Tree&lt;/h3&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/oh-christmas-tree.png&quot; alt=&quot;oh-christmas-tree&quot;&gt;

&lt;p&gt;&amp;laquo;Oh Christmas Treeeeeee, oh Christmas Tree!&amp;raquo;&lt;/p&gt;

&lt;p&gt;Этот шрифт заставляет меня слышать, как моя безумная тетушка изо всех сил поет в гостиной.&lt;/p&gt;

&lt;p&gt;Этот декоративный шрифт идеально подходит для распространения Новогоднего настроения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/kr-oh-christmas-tree-font.html&quot;&gt;https://www.1001fonts.com/kr-oh-christmas-tree-font.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cartoon Blocks&lt;/p&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/cartoon-blocks.jpg&quot; alt=&quot;cartoon-blocks&quot;&gt;

&lt;p&gt;Этот игривый Новогодний шрифт можно бесплатно использовать в любых ваших будущих Новогодних проектах.&lt;/p&gt;

&lt;p&gt;Свяжитесь с владельцем для использования в коммерческих целях.&lt;/p&gt;

&lt;p&gt;Этот 3D Новогодний шрифт весел и идеален для сезона!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/cartoon-blocks-christmas-font.html&quot;&gt;https://www.1001fonts.com/cartoon-blocks-christmas-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Christbaumkugeln&lt;/h3&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/christbaumkugeln.png&quot; alt=&quot;christbaumkugeln&quot;&gt;

&lt;p&gt;Просто взгляните на этот праздничный шрифт.&lt;/p&gt;

&lt;p&gt;Шрифт внутри украшений настолько праздничный, что больно.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/christbaumkugeln-font.html&quot;&gt;https://www.1001fonts.com/christbaumkugeln-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Christmas Cookies&lt;/h3&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/christmas-cookies.png&quot; alt=&quot;christmas-cookies&quot;&gt;

&lt;p&gt;Взгляните на этот 3D Новогодний шрифт.&lt;/p&gt;

&lt;p&gt;Можете ли вы почувствовать запах Новогоднего печенья, глядя на него?&lt;/p&gt;

&lt;p&gt;Потому что я знаю, что могу.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/christmas-cookies-font.html&quot;&gt;https://www.1001fonts.com/christmas-cookies-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Christmas Time&lt;/h3&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/christmas-time.png&quot; alt=&quot;christmas-time&quot;&gt;

&lt;p&gt;Наш предпоследний Новогодний шрифт выглядит как классический.&lt;/p&gt;

&lt;p&gt;Это может быть на обложке любой классической Новогодней книги.&lt;/p&gt;

&lt;p&gt;Этот красивый, рукописный шрифт бесплатный и доступен для личного пользования.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/christmas-time-personal-use-font.html&quot;&gt;https://www.1001fonts.com/christmas-time-personal-use-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Mountains of Christmas&lt;/h3&gt;

&lt;img src=&quot;img/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/mountains-of-christmas.jpg&quot; alt=&quot;mountains-of-christmas&quot;&gt;

&lt;p&gt;И наконец, мы подошли к нашему последнему Новогоднему шрифту.&lt;/p&gt;

&lt;p&gt;Этот великолепный рукописный шрифт просто ждет вас, чтобы использовать в вашем следующем дизайн-проекте!&lt;/p&gt;

&lt;p&gt;Так чего же ты ждешь?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Скачать здесь:&lt;/strong&gt; &lt;a href=&quot;https://www.1001fonts.com/mountains-of-christmas-font.html&quot;&gt;https://www.1001fonts.com/mountains-of-christmas-font.html&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Завершение&lt;/h3&gt;

&lt;p&gt;Мы надеемся, что вам понравился наш список бесплатных Новогодних шрифтов для использования в этом веселом сезоне.&lt;/p&gt;

&lt;p&gt;Желаем всем самых волшебных праздников!&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://webdesignledger.com/12-free-christmas-fonts-use-spread-christmas-cheer/&quot; target=&quot;_blank&quot;&gt;&amp;laquo;12 Free Christmas Fonts for You to Use to Spread Christmas Cheer&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Пришло время начать готовиться к Новогодним проектам, если вы еще этого не сделали! Мы предоставили вам то, что мы считаем окончательным списком бесплатных Новогодних ресурсов по дизайну несколько недель назад, но я сохранил лучшее напоследок. Бесплатные Новогодние шрифты! Я нашел множество бесплатных Новогодних шрифтов, чтобы помочь вам распространять настроение в этом году через ваши дизайны, но я выбрал свои любимые для этого списка. 12 бесплатных Новогодних шрифтов для вас Приготовьтесь к этому удивительному списку бесплатных Новогодних шрифтов! Grinched Все узнают этот шрифт как тот из книги и фильма &amp;laquo;Гринч&amp;raquo;. Это Рождество идеально подходит для вас, его можно использовать бесплатно как для личного пользования, так и для коммерческого, вам необходимо только связаться с владельцем. Я думаю, что этот шрифт всегда будет моим любимым Новогодним шрифтом. Скачать здесь: https://www.1001fonts.com/grinched-font.html Beyond Wonderland Этот шрифт прямо кричит зимой. В самом шрифте, похоже, идет снег! Этот рукописный шрифт является бесплатным для личного использования, и вы можете связаться с владельцем для коммерческого использования. Скачать здесь: https://www.1001fonts.com/beyond-wonderland-font.html The Gingerbread House Далее у нас есть этот кудрявый рукописный Новогодний шрифт под названием &amp;laquo;Пряничный домик&amp;raquo;. Рукописные шрифты на Новый год являются обязательным условием. Это вызывает некоторую ностальгию, и каждый, даже люди, абсолютно не имеющие дизайнерских навыков, могут признать, что этот шрифт - Новогодний. Этот шрифт бесплатный для личного использования. Скачать здесь: https://www.1001fonts.com/the-gingerbread-house-font.html Candy Time &amp;laquo;Сладкий час&amp;raquo; выглядит очень вкусно. Этот Новогодний шрифт из карамельных тросточек идеально подойдет для любого типа кулинарного проекта или проекта для игры для детей, или для чего угодно, к чему вы прикладываете свои творческие способности и ум. Этот шрифт очень универсален и идеально подходит для сезона. Скачать здесь: https://www.1001fonts.com/candytime-font.html Frosty Этот шрифт кажется таким волшебным и является идеальным воплощением зимы. Шрифт полон символов и буквально имеет маленькие снежинки, плавающие среди букв. Этот шрифт идеально подходит для Новогоднего сезона. Этот шрифт также бесплатен для личного и коммерческого использования. Скачать здесь: https://www.1001fonts.com/frosty-font.html Cane Letters Еще один потрясающий бесплатный Новогодний шрифт для вас. Этот шрифт испускает 3D-эффект из-за трости, скрывающей буквы. Очень праздничный, милый и Новогодний. Скачать здесь: https://www.1001fonts.com/kr-cane-letters-font.html Oh Christmas Tree &amp;laquo;Oh Christmas Treeeeeee, oh Christmas Tree!&amp;raquo; Этот шрифт заставляет меня слышать, как моя безумная тетушка изо всех сил поет в гостиной. Этот декоративный шрифт идеально подходит для распространения Новогоднего настроения. Скачать здесь: https://www.1001fonts.com/kr-oh-christmas-tree-font.html Cartoon Blocks Этот игривый Новогодний шрифт можно бесплатно использовать в любых ваших будущих Новогодних проектах. Свяжитесь с владельцем для использования в коммерческих целях. Этот 3D Новогодний шрифт весел и идеален для сезона! Скачать здесь: https://www.1001fonts.com/cartoon-blocks-christmas-font.html Christbaumkugeln Просто взгляните на этот праздничный шрифт. Шрифт внутри украшений настолько праздничный, что больно. Скачать здесь: https://www.1001fonts.com/christbaumkugeln-font.html Christmas Cookies Взгляните на этот 3D Новогодний шрифт. Можете ли вы почувствовать запах Новогоднего печенья, глядя на него? Потому что я знаю, что могу. Скачать здесь: https://www.1001fonts.com/christmas-cookies-font.html Christmas Time Наш предпоследний Новогодний шрифт выглядит как классический. Это может быть на обложке любой классической Новогодней книги. Этот красивый, рукописный шрифт бесплатный и доступен для личного пользования. Скачать здесь: https://www.1001fonts.com/christmas-time-personal-use-font.html Mountains of Christmas И наконец, мы подошли к нашему последнему Новогоднему шрифту. Этот великолепный рукописный шрифт просто ждет вас, чтобы использовать в вашем следующем дизайн-проекте! Так чего же ты ждешь? Скачать здесь: https://www.1001fonts.com/mountains-of-christmas-font.html Завершение Мы надеемся, что вам понравился наш список бесплатных Новогодних шрифтов для использования в этом веселом сезоне. Желаем всем самых волшебных праздников! Перевод статьи &amp;laquo;12 Free Christmas Fonts for You to Use to Spread Christmas Cheer&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/graphic/12-besplatnyh-novogodnih-shriftov-dlya-rasprostraneniya-novogodnego-duha/1.jpg" /></entry><entry><title type="html">Коллекция бесплатных Новогодних дизайнерских ресурсов</title><link href="https://codehax.ru/blog/graphic/2019-11-21-kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov.html" rel="alternate" type="text/html" title="Коллекция бесплатных Новогодних дизайнерских ресурсов" /><published>2019-11-21T00:00:00+04:00</published><updated>2019-11-21T00:00:00+04:00</updated><id>https://codehax.ru/blog/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov</id><content type="html" xml:base="https://codehax.ru/blog/graphic/2019-11-21-kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov.html">&lt;p&gt;С приближением Нового Года, вас, наверное, завалит Новогодними дизайнами.&lt;/p&gt;

&lt;p&gt;Каждый хочет сделать свою работу максимально эффективно и быстро.&lt;/p&gt;

&lt;p&gt;Вот почему я собрал для вас множество бесплатных Новогодних ресурсов.&lt;/p&gt;

&lt;p&gt;Я вам обеспечу все, от бесплатных Новогодних иконок до бесплатных Новогодних PNG, векторов и изображений.&lt;/p&gt;

&lt;h3&gt;Бесплатные Новогодние иконки&lt;/h3&gt;

&lt;p&gt;Наличие нескольких бесплатных Новогодних иконок, несомненно, сэкономит вам много времени, поэтому вам не нужно начинать с нуля.&lt;/p&gt;

&lt;p&gt;Вот мой выбор бесплатных Новогодних иконок, которые вы можете использовать.&lt;/p&gt;

&lt;h4&gt;Flaticon&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/flaticon.jpg&quot; alt=&quot;flaticon&quot;&gt;

&lt;p&gt;У Flaticon есть много бесплатных Новогодних иконок, которые вы можете использовать для любых своих Новогодних проектов, которые будут в ближайшее время.&lt;/p&gt;

&lt;p&gt;Это сэкономит вам много времени, и тот факт, что сотни этих иконок бесплатны, поможет вам сэкономить деньги!&lt;/p&gt;

&lt;p&gt;Обновите до премиум, чтобы получить тысячи иконок!&lt;/p&gt;

&lt;h4&gt;Freepik&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/freepik.jpg&quot; alt=&quot;freepik&quot;&gt;

&lt;p&gt;Freepik поможет вам распространить огромное количество Новогодних поздравлений с их сотнями бесплатных Новогодних элементов.&lt;/p&gt;

&lt;p&gt;У них есть плоский и 3D-дизайны для Новогодних иконок. Вам не стоит пропускать это!&lt;/p&gt;

&lt;h4&gt;Vecteezy&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/vecteezy.jpg&quot; alt=&quot;vecteezy&quot;&gt;

&lt;p&gt;В Vecteezy есть много цветных и веселых иконок, которые вы можете использовать бесплатно.&lt;/p&gt;

&lt;p&gt;Просто выберите те, которые вам нравятся, скачайте и используйте по своему вкусу!&lt;/p&gt;

&lt;h3&gt;Бесплатные Новогодние PNG&lt;/h3&gt;

&lt;p&gt;Порадуйте своих клиентов лучшими Новогодними PNG.&lt;/p&gt;

&lt;p&gt;Вот мои самые любимые бесплатные PNG-сайты, которые наверняка помогут вам в этом сезоне.&lt;/p&gt;

&lt;h4&gt;Pngtree&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/pngtree.jpg&quot; alt=&quot;pngtree&quot;&gt;

&lt;p&gt;Pngtree отлично подходит для повседневного использования, но особенно имеет несколько отличных Новогодних PNG.&lt;/p&gt;

&lt;p&gt;Их качество ни разу меня не разочаровало.&lt;/p&gt;

&lt;p&gt;Единственный недостаток их сайта, на мой взгляд, это то, что вы получаете только 2 бесплатных PNG в день.&lt;/p&gt;

&lt;p&gt;Так что выбирайте мудро или подумайте о переходе на премиум-аккаунт!&lt;/p&gt;

&lt;div class=&quot;ad-article&quot;&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block; text-align:center;&quot;
     data-ad-layout=&quot;in-article&quot;
     data-ad-format=&quot;fluid&quot;
     data-ad-client=&quot;ca-pub-8291473972193166&quot;
     data-ad-slot=&quot;9506016869&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
     (adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;

&lt;/div&gt;

&lt;h4&gt;Pngfly&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/pngfly.jpg&quot; alt=&quot;pngfly&quot;&gt;

&lt;p&gt;У Pngfly есть более 20 000 бесплатных ресурсов, чтобы вы могли использовать это Рождество. Это, определенно, предложение, которое не стоит пропускать.&lt;/p&gt;

&lt;h4&gt;Pngmart&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/pngmart.jpg&quot; alt=&quot;pngmart&quot;&gt;

&lt;p&gt;У Pngmart есть десятки страниц, которые вы можете просмотреть, когда будете искать идеальные бесплатные Новогодние PNG.&lt;/p&gt;

&lt;p&gt;Проверьте их!&lt;/p&gt;

&lt;h3&gt;Бесплатные Новогодние векторы&lt;/h3&gt;

&lt;p&gt;Векторы - огромная часть графического дизайна, поэтому считаю правильным, что мы просматриваем лучшие веб-сайты с лучшими бесплатными Новогодними векторами, которые может предложить Интернет.&lt;/p&gt;

&lt;h4&gt;Vexels&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/vexels.jpg&quot; alt=&quot;vexels&quot;&gt;

&lt;p&gt;У Vexels есть одни из лучших векторов, на которые я положил глаз. Красочные, веселые, отлично подойдут на Новый год.&lt;/p&gt;

&lt;p&gt;Если вы ищете отличные бесплатные Новогодние векторы, то вам обязательно нужно их проверить!&lt;/p&gt;

&lt;h4&gt;Vectorstock&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/vectorstock.jpg&quot; alt=&quot;vectorstock&quot;&gt;

&lt;p&gt;Vectorstock предлагает более 13 000 бесплатных Новогодних векторов!&lt;/p&gt;

&lt;h4&gt;Vector4free&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/vector4free.jpg&quot; alt=&quot;vector4free&quot;&gt;

&lt;p&gt;Vector4free - отличный выбор для использования в повседневных проектах, но не только.&lt;/p&gt;

&lt;p&gt;У них есть много Новогодних векторов для на выбор, поэтому я рекомендую вам присмотреться к нему!&lt;/p&gt;

&lt;h3&gt;Бесплатные Новогодние картинки&lt;/h3&gt;

&lt;p&gt;Новогодние картинки придадут теплый, домашний уют любому проекту.&lt;/p&gt;

&lt;p&gt;Если у вас нет фотоаппарата или времени, чтобы делать какие-либо Новогодние снимки, обязательно используйте эти бесплатные веб-сайты с изображениями Новогодних фотографий для своей работы!&lt;/p&gt;

&lt;h4&gt;Pexels&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/pexels.jpg&quot; alt=&quot;pexels&quot;&gt;

&lt;p&gt;Pexels - один из моих любимых сайтов с изображениями.&lt;/p&gt;

&lt;p&gt;У них есть много высококачественных изображений от отличных фотографов.&lt;/p&gt;

&lt;p&gt;И если вы хотите, вы можете поддержать автора, пожертвовав ему!&lt;/p&gt;

&lt;h4&gt;Pixabay&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/pixabay.jpg&quot; alt=&quot;pixabay&quot;&gt;

&lt;p&gt;У Pixabay имеется для вас множество вариантов фотографий.&lt;/p&gt;

&lt;p&gt;С более чем 20,00 бесплатных изображений, посвященных исключительно Новому году, вы обязательно найдете нужную фотографию.&lt;/p&gt;

&lt;h4&gt;Unsplash&lt;/h4&gt;

&lt;img src=&quot;img/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/unsplash.jpg&quot; alt=&quot;unsplash&quot;&gt;

&lt;p&gt;бесплатные картинки на Новогодние праздники&lt;/p&gt;

&lt;p&gt;И наконец, у нас есть Unsplash.&lt;/p&gt;

&lt;p&gt;Unsplash имеет тонны Новогодних фотографий на ваш выбор, которые являются чрезвычайно праздничными.&lt;/p&gt;

&lt;p&gt;Посетите их сайт и найдите там все Новогодние фото, которые вам нужны!&lt;/p&gt;

&lt;h3&gt;Завершение&lt;/h3&gt;

&lt;p&gt;Я надеюсь, что вы сочтете эти дизайн-ресурсы полезными!&lt;/p&gt;

&lt;p&gt;До скорого,&lt;/p&gt;

&lt;p&gt;Оставайтесь креативными, ребята!&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://webdesignledger.com/ultimate-collection-free-christmas-design-resources/&quot; target=&quot;_blank&quot;&gt;&amp;laquo;The Ultimate Collection of Free Christmas Design Resources&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">С приближением Нового Года, вас, наверное, завалит Новогодними дизайнами. Каждый хочет сделать свою работу максимально эффективно и быстро. Вот почему я собрал для вас множество бесплатных Новогодних ресурсов. Я вам обеспечу все, от бесплатных Новогодних иконок до бесплатных Новогодних PNG, векторов и изображений. Бесплатные Новогодние иконки Наличие нескольких бесплатных Новогодних иконок, несомненно, сэкономит вам много времени, поэтому вам не нужно начинать с нуля. Вот мой выбор бесплатных Новогодних иконок, которые вы можете использовать. Flaticon У Flaticon есть много бесплатных Новогодних иконок, которые вы можете использовать для любых своих Новогодних проектов, которые будут в ближайшее время. Это сэкономит вам много времени, и тот факт, что сотни этих иконок бесплатны, поможет вам сэкономить деньги! Обновите до премиум, чтобы получить тысячи иконок! Freepik Freepik поможет вам распространить огромное количество Новогодних поздравлений с их сотнями бесплатных Новогодних элементов. У них есть плоский и 3D-дизайны для Новогодних иконок. Вам не стоит пропускать это! Vecteezy В Vecteezy есть много цветных и веселых иконок, которые вы можете использовать бесплатно. Просто выберите те, которые вам нравятся, скачайте и используйте по своему вкусу! Бесплатные Новогодние PNG Порадуйте своих клиентов лучшими Новогодними PNG. Вот мои самые любимые бесплатные PNG-сайты, которые наверняка помогут вам в этом сезоне. Pngtree Pngtree отлично подходит для повседневного использования, но особенно имеет несколько отличных Новогодних PNG. Их качество ни разу меня не разочаровало. Единственный недостаток их сайта, на мой взгляд, это то, что вы получаете только 2 бесплатных PNG в день. Так что выбирайте мудро или подумайте о переходе на премиум-аккаунт! Pngfly У Pngfly есть более 20 000 бесплатных ресурсов, чтобы вы могли использовать это Рождество. Это, определенно, предложение, которое не стоит пропускать. Pngmart У Pngmart есть десятки страниц, которые вы можете просмотреть, когда будете искать идеальные бесплатные Новогодние PNG. Проверьте их! Бесплатные Новогодние векторы Векторы - огромная часть графического дизайна, поэтому считаю правильным, что мы просматриваем лучшие веб-сайты с лучшими бесплатными Новогодними векторами, которые может предложить Интернет. Vexels У Vexels есть одни из лучших векторов, на которые я положил глаз. Красочные, веселые, отлично подойдут на Новый год. Если вы ищете отличные бесплатные Новогодние векторы, то вам обязательно нужно их проверить! Vectorstock Vectorstock предлагает более 13 000 бесплатных Новогодних векторов! Vector4free Vector4free - отличный выбор для использования в повседневных проектах, но не только. У них есть много Новогодних векторов для на выбор, поэтому я рекомендую вам присмотреться к нему! Бесплатные Новогодние картинки Новогодние картинки придадут теплый, домашний уют любому проекту. Если у вас нет фотоаппарата или времени, чтобы делать какие-либо Новогодние снимки, обязательно используйте эти бесплатные веб-сайты с изображениями Новогодних фотографий для своей работы! Pexels Pexels - один из моих любимых сайтов с изображениями. У них есть много высококачественных изображений от отличных фотографов. И если вы хотите, вы можете поддержать автора, пожертвовав ему! Pixabay У Pixabay имеется для вас множество вариантов фотографий. С более чем 20,00 бесплатных изображений, посвященных исключительно Новому году, вы обязательно найдете нужную фотографию. Unsplash бесплатные картинки на Новогодние праздники И наконец, у нас есть Unsplash. Unsplash имеет тонны Новогодних фотографий на ваш выбор, которые являются чрезвычайно праздничными. Посетите их сайт и найдите там все Новогодние фото, которые вам нужны! Завершение Я надеюсь, что вы сочтете эти дизайн-ресурсы полезными! До скорого, Оставайтесь креативными, ребята! Перевод статьи &amp;laquo;The Ultimate Collection of Free Christmas Design Resources&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/graphic/kollekciya-besplatnyh-novogodnih-dizajnerskih-resursov/1.jpg" /></entry><entry><title type="html">Предстоящие новые функции JavaScript, которые Вы должны знать, если используете JavaScript каждый день</title><link href="https://codehax.ru/blog/coding/2019-11-14-predstoyashhie-novye-funkcii-javascript-kotorye-vy-dolzhny-znat.html" rel="alternate" type="text/html" title="Предстоящие новые функции JavaScript, которые Вы должны знать, если используете JavaScript каждый день" /><published>2019-11-14T00:00:00+04:00</published><updated>2019-11-14T00:00:00+04:00</updated><id>https://codehax.ru/blog/coding/predstoyashhie-novye-funkcii-javascript-kotorye-vy-dolzhny-znat</id><content type="html" xml:base="https://codehax.ru/blog/coding/2019-11-14-predstoyashhie-novye-funkcii-javascript-kotorye-vy-dolzhny-znat.html">&lt;p&gt;С момента выпуска ECMAScript2015 (также называемого ES6) JavaScript изменился и значительно улучшился. Это отличная новость для всех разработчиков JavaScript. Кроме того, новая версия ECMAScript выпускается каждый год. Вы, вероятно, не заметили, какие функции были добавлены в последней версии ECMAScript, выпущенной в июне 2019 года. Я кратко покажу вам новые функции, добавленные в последней версии, и расскажу о новых функциях для будущей версии.&lt;/p&gt;

&lt;blockquote&gt;
&lt;strong&gt;Оговорка&lt;/strong&gt;
&lt;p&gt;Функции, которые я покажу вам, еще НЕ утверждены для следующей версии. Все, о чем я расскажу в этом посте, в настоящее время находится на этапе 3. Посмотрите &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;этот репозиторий&lt;/a&gt;, если вы хотите получить более подробную информацию.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Особенности в ECMAScript2019 (ES10)&lt;/h3&gt;

&lt;h4&gt;1. Array.prototype.flat&lt;/h4&gt;
&lt;p&gt;Метод, который создает новый массив со всеми элементами вложенного массива, рекурсивно объединенными в него до заданной глубины.&lt;/p&gt;

&lt;pre&gt;
const array = [1, 2, [3, 4]];
array.flat(); // [1, 2, 3, 4];
&lt;/pre&gt;

&lt;p&gt;Это очень полезно, особенно если вы хотите выровнять вложенный массив. Если глубина вашего массива больше, чем на одну глубину, однократный вызов &lt;code&gt;flat&lt;/code&gt; не может полностью сгладить ваш массив. &lt;code&gt;flat&lt;/code&gt; принимает параметр для глубины, который указывает, на сколько глубин вы хотите, чтобы он сгладил массив.&lt;/p&gt;

&lt;pre&gt;
// Crazy example
const crazyArray = [1, 2, [3, 4], [[5], [6, [7,8]]]];
crazyArray.flat(Infinity); // [1, 2, 3, 4, 5, 6, 7, 8];

// The parameter must be the number type
&lt;/pre&gt;

&lt;p&gt;Чем глубже вы собираетесь искать в массиве, тем больше вычислительного времени потребуется для его выравнивания. Обратите внимание, что IE и Edge не поддерживают эту функцию.&lt;/p&gt;

&lt;h4&gt;2. Array.prototype.flatMap&lt;/h4&gt;

&lt;p&gt;Метод сначала представляет каждый элемент с помощью функции отображения, а затем выравнивает результат в новый массив.&lt;/p&gt;

&lt;pre&gt;
const arr = [&quot;it's Sunny in&quot;, &quot;&quot;, &quot;California&quot;];

arr.flatMap(x =&gt; x.split(&quot; &quot;));
// [&quot;it's&quot;,&quot;Sunny&quot;,&quot;in&quot;, &quot;&quot;, &quot;California&quot;]
&lt;/pre&gt;

&lt;p&gt;Разница между &lt;code&gt;flat&lt;/code&gt; и &lt;code&gt;flatMap&lt;/code&gt; заключается в том, что вы можете поместить в &lt;code&gt;flatMap&lt;/code&gt; пользовательскую функцию для управления каждым значением. Кроме того, в отличие от &lt;code&gt;flat&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt; выравнивает только один массив глубин. Возвращаемое значение должно быть типом массива. Это может быть очень полезно, когда вы должны что-то сделать перед выравниванием массива.&lt;/p&gt;

&lt;p&gt;В ES10 было добавлено больше возможностей. &lt;a href=&quot;https://devinduct.com/blogpost/48/8-new-es10-es2019-features-by-example&quot;&gt;Нажмите здесь&lt;/a&gt;, если вы хотите узнать больше о них.&lt;/p&gt;

&lt;h3&gt;Новые функции на этапе 3&lt;/h3&gt;

&lt;p&gt;На этапе 3 предлагается несколько интересных функций. Я кратко представлю вам некоторые из них.&lt;/p&gt;

&lt;h4&gt;Числовые разделители&lt;/h4&gt;
&lt;p&gt;Когда вы присваивали переменной большое число, вас не смущало, насколько велико это число или вы правильно его написали? Это предложение позволяет вам ставить нижнее подчеркивание между числами, чтобы вам было проще считать его.&lt;/p&gt;

&lt;pre&gt;
1_000_000_000           // Ah, so a billion
101_475_938.38          // And this is hundreds of millions

let fee = 123_00;       // $123 (12300 cents, apparently)
let fee = 12_300;       // $12,300 (woah, that fee!)
let amount = 12345_00;  // 12,345 (1234500 cents, apparently)
let amount = 123_4500;  // 123.45 (4-fixed financial)
let amount = 1_234_500; // 1,234,500

let budget = 1_000_000_000_000;

// What is the value of `budget`? It's 1 trillion!
//
// Let's confirm:
console.log(budget === 10 ** 12); // true
&lt;/pre&gt;

&lt;p&gt;Каждый разработчик будет сам решать, использовать ли эту функцию после ее выпуска, но одно можно сказать наверняка, эта функция уменьшит ваши головные боли при подсчете больших чисел!&lt;/p&gt;

&lt;h4&gt;Await высшего уровня&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;await&lt;/code&gt; высшего уровня позволяет модулям выступать в качестве больших асинхронных функций: С &lt;code&gt;await&lt;/code&gt; высшего уровня модули ECMAScript могут &lt;code&gt;ожидать&lt;/code&gt; источники, заставляя другие модули, &lt;code&gt;импортирующие&lt;/code&gt; их, ждать, прежде чем они начнут анализировать свое тело.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Мотивация этой функции заключалась в том, что при &lt;code&gt;импорте&lt;/code&gt; модуля с &lt;code&gt;асинхронной&lt;/code&gt; функцией, вывод &lt;code&gt;асинхронной&lt;/code&gt; функции &lt;code&gt;не определен&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;
// awaiting.mjs
import { process } from &quot;./some-module.mjs&quot;;
const dynamic = import(computedModuleSpecifier);
const data = fetch(url);
export const output = process((await dynamic).default, await data);
&lt;/pre&gt;

&lt;p&gt;Есть два файла. &lt;code&gt;вывод&lt;/code&gt; может быть &lt;code&gt;неопределенным&lt;/code&gt;, если он вызывается до выполнения задач Promises.&lt;/p&gt;

&lt;pre&gt;
// usage.mjs
import { output } from &quot;./awaiting.mjs&quot;;
export function outputPlusValue(value) { return output + value }

console.log(outputPlusValue(100));
setTimeout(() =&gt; console.log(outputPlusValue(100), 1000);
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;usage.mjs&lt;/code&gt; не выполнит ни одного из утверждений в нем, пока &lt;code&gt;ожидающие&lt;/code&gt; в &lt;code&gt;awaiting.mjs&lt;/code&gt; не выполнят свои Promises.&lt;/p&gt;

&lt;p&gt;Nullish Coalescing для JavaScript&lt;/p&gt;
&lt;p&gt;Это стало бы одной из самых полезных функций среди предложений на этапе 3. Мы часто писали такой код.&lt;/p&gt;

&lt;pre&gt;
const obj = {
  name: 'James'
};

const name = obj.name || 'Jane'; // James
&lt;/pre&gt;

&lt;p&gt;Если &lt;code&gt;obj.name&lt;/code&gt; ложно, верните ‘Jane’, поэтому &lt;code&gt;undefined&lt;/code&gt; не будет возвращено. Но проблема в том, что пустая строка (&lt;code&gt;‘’&lt;/code&gt;) также считается ложной в этом случае. Затем мы должны переписать это снова, как показано ниже.&lt;/p&gt;

&lt;pre&gt;const name = (obj.name &amp;&amp; obj.name !== '') ? obj.name : 'Jane';&lt;/pre&gt;

&lt;p&gt;Это кость в горле, которую приходится писать каждый раз. Это предложение позволяет вам проверять только &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;
const response = {
  settings: {
    nullValue: null,
    height: 400,
    animationDuration: 0,
    headerText: '',
    showSplashScreen: false
  }
};

const undefinedValue = response.settings.undefinedValue ?? 'some other default'; // result: 'some other default'
const nullValue = response.settings.nullValue ?? 'some other default'; // result: 'some other default'
const headerText = response.settings.headerText ?? 'Hello, world!'; // result: ''
const animationDuration = response.settings.animationDuration ?? 300; // result: 0
const showSplashScreen = response.settings.showSplashScreen ?? true; // result: false
&lt;/pre&gt;

&lt;p&gt;Optional Chaining&lt;/p&gt;
&lt;p&gt;Это предложение идет с &lt;em&gt;Nullish Coalescing для JavaScript&lt;/em&gt;, особенно в TypeScript. &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/16&quot;&gt;TypeScript объявил&lt;/a&gt;, что они включат &lt;em&gt;Nullish Coalescing для JavaScript&lt;/em&gt; и это предложение в свою следующую выпущенную версию, 3.7.0.&lt;/p&gt;

&lt;pre&gt;
const city = country &amp;&amp; country.city;
// undefined if city doesn't exist
&lt;/pre&gt;

&lt;p&gt;Посмотрите на пример кода. Чтобы получить &lt;code&gt;city&lt;/code&gt;, который находится в объекте &lt;code&gt;country&lt;/code&gt;, мы должны проверить, существует ли &lt;code&gt;country&lt;/code&gt; и существует ли &lt;code&gt;city&lt;/code&gt; в &lt;code&gt;country&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;С помощью &lt;em&gt;Optional Chaining&lt;/em&gt; этот код может быть реорганизован следующим образом.&lt;/p&gt;

&lt;pre&gt;
const city = country?.city; // undefined if city doesn't exist
&lt;/pre&gt;

&lt;p&gt;Эта функция кажется очень удобной и полезной для этой ситуации.&lt;/p&gt;

&lt;pre&gt;
import { fetch } from '../yourFetch.js';

(async () =&gt; {
  const res = await fetch();

  // res &amp;&amp; res.data &amp;&amp; res.data.cities || undefined
  const cities = res?.data?.cities;
})();
&lt;/pre&gt;

&lt;p&gt;Promise.any&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Promise.any&lt;/code&gt; принимает итерацию обещаний и возвращает обещание, которое выполняется первым данным обещанием, которое должно быть выполнено, или отклоняется с массивом причин отказа, если все данные обещания отклоняются.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;С асинхронным ожиданием,&lt;/p&gt;

&lt;pre&gt;
try {
  const first = await Promise.any(promises);
  // Any of the promises was fulfilled.
} catch (error) {
  // All of the promises were rejected.
}
&lt;/pre&gt;

&lt;p&gt;С моделью Promise,&lt;/p&gt;

&lt;pre&gt;
Promise.any(promises).then(
  (first) =&gt; {
    // Any of the promises was fulfilled.
  },
  (error) =&gt; {
    // All of the promises were rejected.
  }
);
&lt;/pre&gt;

&lt;p&gt;Так как есть Promise &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;allSettled&lt;/code&gt; и &lt;code&gt;race&lt;/code&gt;, не было ничего &lt;code&gt;any&lt;/code&gt;. Так что эта функция проста, но мощна для необходимой ситуации.&lt;/p&gt;

&lt;p&gt;Однако это предложение еще не было протестировано, поэтому принятие этого предложения может занять больше времени в будущей версии ECMAScript.&lt;/p&gt;

&lt;p&gt;Заключение&lt;/p&gt;

&lt;p&gt;На этапе 3 так много интересных предложений. Я не могу дождаться встречи с ними на ES11 или ES12. Конечно, они мне не понадобятся, но некоторые из них определенно сделают мои коды более элегантными.&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://medium.com/javascript-in-plain-english/upcoming-new-javascript-features-you-should-know-if-you-use-javascript-everyday-8208b477b7a2&quot; target=&quot;_blank&quot;&gt;&amp;laquo;Upcoming new JavaScript features You should know if you use JavaScript everyday&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">С момента выпуска ECMAScript2015 (также называемого ES6) JavaScript изменился и значительно улучшился. Это отличная новость для всех разработчиков JavaScript. Кроме того, новая версия ECMAScript выпускается каждый год. Вы, вероятно, не заметили, какие функции были добавлены в последней версии ECMAScript, выпущенной в июне 2019 года. Я кратко покажу вам новые функции, добавленные в последней версии, и расскажу о новых функциях для будущей версии. Оговорка Функции, которые я покажу вам, еще НЕ утверждены для следующей версии. Все, о чем я расскажу в этом посте, в настоящее время находится на этапе 3. Посмотрите этот репозиторий, если вы хотите получить более подробную информацию. Особенности в ECMAScript2019 (ES10) 1. Array.prototype.flat Метод, который создает новый массив со всеми элементами вложенного массива, рекурсивно объединенными в него до заданной глубины. const array = [1, 2, [3, 4]]; array.flat(); // [1, 2, 3, 4]; Это очень полезно, особенно если вы хотите выровнять вложенный массив. Если глубина вашего массива больше, чем на одну глубину, однократный вызов flat не может полностью сгладить ваш массив. flat принимает параметр для глубины, который указывает, на сколько глубин вы хотите, чтобы он сгладил массив. // Crazy example const crazyArray = [1, 2, [3, 4], [[5], [6, [7,8]]]]; crazyArray.flat(Infinity); // [1, 2, 3, 4, 5, 6, 7, 8]; // The parameter must be the number type Чем глубже вы собираетесь искать в массиве, тем больше вычислительного времени потребуется для его выравнивания. Обратите внимание, что IE и Edge не поддерживают эту функцию. 2. Array.prototype.flatMap Метод сначала представляет каждый элемент с помощью функции отображения, а затем выравнивает результат в новый массив. const arr = [&quot;it's Sunny in&quot;, &quot;&quot;, &quot;California&quot;]; arr.flatMap(x =&gt; x.split(&quot; &quot;)); // [&quot;it's&quot;,&quot;Sunny&quot;,&quot;in&quot;, &quot;&quot;, &quot;California&quot;] Разница между flat и flatMap заключается в том, что вы можете поместить в flatMap пользовательскую функцию для управления каждым значением. Кроме того, в отличие от flat, flatMap выравнивает только один массив глубин. Возвращаемое значение должно быть типом массива. Это может быть очень полезно, когда вы должны что-то сделать перед выравниванием массива. В ES10 было добавлено больше возможностей. Нажмите здесь, если вы хотите узнать больше о них. Новые функции на этапе 3 На этапе 3 предлагается несколько интересных функций. Я кратко представлю вам некоторые из них. Числовые разделители Когда вы присваивали переменной большое число, вас не смущало, насколько велико это число или вы правильно его написали? Это предложение позволяет вам ставить нижнее подчеркивание между числами, чтобы вам было проще считать его. 1_000_000_000 // Ah, so a billion 101_475_938.38 // And this is hundreds of millions let fee = 123_00; // $123 (12300 cents, apparently) let fee = 12_300; // $12,300 (woah, that fee!) let amount = 12345_00; // 12,345 (1234500 cents, apparently) let amount = 123_4500; // 123.45 (4-fixed financial) let amount = 1_234_500; // 1,234,500 let budget = 1_000_000_000_000; // What is the value of `budget`? It's 1 trillion! // // Let's confirm: console.log(budget === 10 ** 12); // true Каждый разработчик будет сам решать, использовать ли эту функцию после ее выпуска, но одно можно сказать наверняка, эта функция уменьшит ваши головные боли при подсчете больших чисел! Await высшего уровня await высшего уровня позволяет модулям выступать в качестве больших асинхронных функций: С await высшего уровня модули ECMAScript могут ожидать источники, заставляя другие модули, импортирующие их, ждать, прежде чем они начнут анализировать свое тело. Мотивация этой функции заключалась в том, что при импорте модуля с асинхронной функцией, вывод асинхронной функции не определен. // awaiting.mjs import { process } from &quot;./some-module.mjs&quot;; const dynamic = import(computedModuleSpecifier); const data = fetch(url); export const output = process((await dynamic).default, await data); Есть два файла. вывод может быть неопределенным, если он вызывается до выполнения задач Promises. // usage.mjs import { output } from &quot;./awaiting.mjs&quot;; export function outputPlusValue(value) { return output + value } console.log(outputPlusValue(100)); setTimeout(() =&gt; console.log(outputPlusValue(100), 1000); usage.mjs не выполнит ни одного из утверждений в нем, пока ожидающие в awaiting.mjs не выполнят свои Promises. Nullish Coalescing для JavaScript Это стало бы одной из самых полезных функций среди предложений на этапе 3. Мы часто писали такой код. const obj = { name: 'James' }; const name = obj.name || 'Jane'; // James Если obj.name ложно, верните ‘Jane’, поэтому undefined не будет возвращено. Но проблема в том, что пустая строка (‘’) также считается ложной в этом случае. Затем мы должны переписать это снова, как показано ниже. const name = (obj.name &amp;&amp; obj.name !== '') ? obj.name : 'Jane'; Это кость в горле, которую приходится писать каждый раз. Это предложение позволяет вам проверять только null и undefined. const response = { settings: { nullValue: null, height: 400, animationDuration: 0, headerText: '', showSplashScreen: false } }; const undefinedValue = response.settings.undefinedValue ?? 'some other default'; // result: 'some other default' const nullValue = response.settings.nullValue ?? 'some other default'; // result: 'some other default' const headerText = response.settings.headerText ?? 'Hello, world!'; // result: '' const animationDuration = response.settings.animationDuration ?? 300; // result: 0 const showSplashScreen = response.settings.showSplashScreen ?? true; // result: false Optional Chaining Это предложение идет с Nullish Coalescing для JavaScript, особенно в TypeScript. TypeScript объявил, что они включат Nullish Coalescing для JavaScript и это предложение в свою следующую выпущенную версию, 3.7.0. const city = country &amp;&amp; country.city; // undefined if city doesn't exist Посмотрите на пример кода. Чтобы получить city, который находится в объекте country, мы должны проверить, существует ли country и существует ли city в country. С помощью Optional Chaining этот код может быть реорганизован следующим образом. const city = country?.city; // undefined if city doesn't exist Эта функция кажется очень удобной и полезной для этой ситуации. import { fetch } from '../yourFetch.js'; (async () =&gt; { const res = await fetch(); // res &amp;&amp; res.data &amp;&amp; res.data.cities || undefined const cities = res?.data?.cities; })(); Promise.any Promise.any принимает итерацию обещаний и возвращает обещание, которое выполняется первым данным обещанием, которое должно быть выполнено, или отклоняется с массивом причин отказа, если все данные обещания отклоняются. С асинхронным ожиданием, try { const first = await Promise.any(promises); // Any of the promises was fulfilled. } catch (error) { // All of the promises were rejected. } С моделью Promise, Promise.any(promises).then( (first) =&gt; { // Any of the promises was fulfilled. }, (error) =&gt; { // All of the promises were rejected. } ); Так как есть Promise all, allSettled и race, не было ничего any. Так что эта функция проста, но мощна для необходимой ситуации. Однако это предложение еще не было протестировано, поэтому принятие этого предложения может занять больше времени в будущей версии ECMAScript. Заключение На этапе 3 так много интересных предложений. Я не могу дождаться встречи с ними на ES11 или ES12. Конечно, они мне не понадобятся, но некоторые из них определенно сделают мои коды более элегантными. Перевод статьи &amp;laquo;Upcoming new JavaScript features You should know if you use JavaScript everyday&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/coding/predstoyashhie-novye-funkcii-javascript-kotorye-vy-dolzhny-znat/1.jpg" /></entry><entry><title type="html">Firefox будет автоматически блокировать уведомления веб-сайтов в 2020 году</title><link href="https://codehax.ru/blog/technology/2019-11-07-firefox-budet-blokirovat-uvedomleniya-v-2020-godu.html" rel="alternate" type="text/html" title="Firefox будет автоматически блокировать уведомления веб-сайтов в 2020 году" /><published>2019-11-07T00:00:00+04:00</published><updated>2019-11-07T00:00:00+04:00</updated><id>https://codehax.ru/blog/technology/firefox-budet-blokirovat-uvedomleniya-v-2020-godu</id><content type="html" xml:base="https://codehax.ru/blog/technology/2019-11-07-firefox-budet-blokirovat-uvedomleniya-v-2020-godu.html">&lt;p&gt;В Интернете есть множество сайтов, которые каждый раз, при посещении, отправляют всплывающее уведомление. Я даже перестал из-за этого заходить на некоторые из них.&lt;/p&gt;

&lt;p&gt;Теперь Firefox активирует остановку злоупотребления уведомлениями. Начиная с начала следующего года десктопная версия браузера (версия 72) будет блокировать их появление и отображать их в виде небольшого значка в адресной строке.&lt;/p&gt;

&lt;p&gt;В апреле компания объявила о &lt;a href=&quot;https://blog.nightly.mozilla.org/2019/04/01/reducing-notification-permission-prompt-spam-in-firefox/&quot; target=&quot;_blank&quot;&gt;развертывании этого теста&lt;/a&gt; для выбора пользователей и его Nightly сборки (в разработке). Пользователи должны были специально щелкнуть на всплывающем уведомлении, чтобы принять меры. Он также начал анонимно собирать данные о том, как пользователи взаимодействовали с уведомлениями.&lt;/p&gt;

&lt;p&gt;В ходе этого исследования было обнаружено, что 99 процентов уведомлений не принимаются, а 48 процентов активно отклоняются пользователями. Он также отметил, что если запросы основывались на взаимодействиях с пользователями, они получили более позитивный отклик. Вы можете прочитать полное исследование &lt;a href=&quot;https://mozilla.report/post/projects/notification_permissions.kp/index.html&quot; target=&quot;_blank&quot;&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Как сообщили Techdows в прошлом месяце, Google Chrome работает над &lt;a href=&quot;https://techdows.com/2019/10/chrome-and-chromium-edge-can-now-silence-the-website-notification-prompts.html&quot; target=&quot;_blank&quot;&gt;аналогичной функцией&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://thenextweb.com/apps/2019/11/06/firefox-will-automatically-block-website-notifications-in-2020/&quot; target=&quot;_blank&quot;&gt;&amp;laquo;Firefox will automatically block website notifications in 2020&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">В Интернете есть множество сайтов, которые каждый раз, при посещении, отправляют всплывающее уведомление. Я даже перестал из-за этого заходить на некоторые из них. Теперь Firefox активирует остановку злоупотребления уведомлениями. Начиная с начала следующего года десктопная версия браузера (версия 72) будет блокировать их появление и отображать их в виде небольшого значка в адресной строке. В апреле компания объявила о развертывании этого теста для выбора пользователей и его Nightly сборки (в разработке). Пользователи должны были специально щелкнуть на всплывающем уведомлении, чтобы принять меры. Он также начал анонимно собирать данные о том, как пользователи взаимодействовали с уведомлениями. В ходе этого исследования было обнаружено, что 99 процентов уведомлений не принимаются, а 48 процентов активно отклоняются пользователями. Он также отметил, что если запросы основывались на взаимодействиях с пользователями, они получили более позитивный отклик. Вы можете прочитать полное исследование здесь. Как сообщили Techdows в прошлом месяце, Google Chrome работает над аналогичной функцией. Перевод статьи &amp;laquo;Firefox will automatically block website notifications in 2020&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/technology/firefox-budet-blokirovat-uvedomleniya-v-2020-godu/1.jpg" /></entry><entry><title type="html">Самая важная особенность JavaScript</title><link href="https://codehax.ru/blog/coding/2019-11-03-samaya-vazhnaya-osobennost-javascript.html" rel="alternate" type="text/html" title="Самая важная особенность JavaScript" /><published>2019-11-03T00:00:00+04:00</published><updated>2019-11-03T00:00:00+04:00</updated><id>https://codehax.ru/blog/coding/samaya-vazhnaya-osobennost-javascript</id><content type="html" xml:base="https://codehax.ru/blog/coding/2019-11-03-samaya-vazhnaya-osobennost-javascript.html">&lt;p&gt;Да, важнее, чем подъем, замыкания и область видимости&lt;/p&gt;

&lt;p&gt;Наиболее важной особенностью JavaScript является то, что функции являются объектами.&lt;/p&gt;

&lt;p&gt;Вот и все. Понимание этого открывает совершенно новое понимание языка JavaScript. В JavaScript функции являются объектами. А в JavaScript объекты имеют свойства, состоящие из пар ключ-значение. А именно, функции JavaScript имеют свойства, которые состоят из пар ключ-значение.&lt;/p&gt;

&lt;p&gt;Точно так же, как массивы (также объекты JavaScript) имеют свойство prototype, к которому могут быть присоединены уникальные методы (например, &lt;code&gt;Array.prototype.filter&amp;nbsp;()&lt;/code&gt;), функции также имеют свойство prototype. Среди свойств &lt;code&gt;Function.prototype&lt;/code&gt; есть уникальные свойства, которые дают код функции, который может быть вызван (например,суть вашей функции). Но исполняемый код не является единственным свойством функции.&lt;/p&gt;

&lt;p&gt;Возможно, вы сталкивались с методами &lt;code&gt;.apply&lt;/code&gt;, &lt;code&gt;.bind&lt;/code&gt; и &lt;code&gt;.call&lt;/code&gt;. Эти методы, как и следовало ожидать, являются методами в свойстве &lt;code&gt;Function.prototype&lt;/code&gt;. &lt;code&gt;Function.prototype&lt;/code&gt; также имеет свои собственные свойства, такие как &lt;code&gt;.name&lt;/code&gt;, который содержит имя функции, и &lt;code&gt;.length&lt;/code&gt;, который содержит число аргументов, ожидаемых функцией.&lt;/p&gt;

&lt;h3&gt;Почему это важно и как оно используется?&lt;/h3&gt;

&lt;p&gt;Возможно, вы слышали, что JavaScript описан как &lt;em&gt;функциональный язык&lt;/em&gt;. Это означает, что в программах на JavaScript строятся функции.&lt;/p&gt;

&lt;p&gt;Функции считаются &lt;em&gt;первоклассными&lt;/em&gt;, что означает, что функции могут делать что угодно - передаваться в качестве аргументов другим функциям, вставляться в структуры данных, присваиваться переменным и возвращаться другими функциями.&lt;/p&gt;

&lt;h4&gt;Вот несколько примеров, которые показывают, что функции JavaScript на самом деле являются просто объектами&lt;/h4&gt;

&lt;p&gt;Скажем, мы присваиваем функцию переменной &lt;code&gt;myFunction&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;var myFunction = function (str) { console.log(str) }&lt;/pre&gt;

&lt;p&gt;Мы можем получить доступ к свойству &lt;code&gt;name&lt;/code&gt; функции так же, как к свойству в любом объекте:&lt;/p&gt;

&lt;pre&gt;
myFunction[“name”]
myFunction.name

// both return “myFunction”
&lt;/pre&gt;

&lt;p&gt;Аналогично, мы можем получить доступ к свойству &lt;code&gt;length&lt;/code&gt; функции, которое возвращает количество аргументов, которые принимает функция:&lt;/p&gt;

&lt;pre&gt;
myFunction[“length”]
myFunction.length

// both return 1
// because myFunction takes in one argument, str
&lt;/pre&gt;

&lt;p&gt;Мы также можем назначить новые свойства функции — так же, как вы бы назначали свойства любому другому объекту JavaScript:&lt;/p&gt;

&lt;pre&gt;
myFunction.myNewProperty = &quot;hello&quot;

myFunction.myNewProperty
// returns &quot;hello&quot;
&lt;/pre&gt;

&lt;p&gt;А поскольку функции в JavaScript являются первоклассными гражданами, мы можем делать с ними практически все, включая назначение других функций в качестве свойств функций.&lt;/p&gt;

&lt;pre&gt;
var coolFunc = function() { return 1 }
myFunction.coolProperty = coolFunc

myFunction.coolProperty
// returns function() { return 1 }

myFunction.coolProperty()
// returns 1
&lt;/pre&gt;

&lt;p&gt;Хотя вы, возможно, никогда не захотите назначать функцию как свойство другой функции на практике, этот простой пример иллюстрирует эту концепцию.&lt;/p&gt;

&lt;p&gt;Функции - это просто объекты JavaScript, и, как следует, все, что вы можете сделать с объектом в JavaScript, вы можете сделать с помощью функции.&lt;/p&gt;

&lt;p&gt;Единственная реальная разница с функциями заключается в том, что они, наряду с другими объектами в JavaScript, имеют свои собственные уникальные методы и свойства, один из которых - это метод, который содержит исполняемый код функции, а другой - тот, который вызывает этот исполняемый код.&lt;/p&gt;

&lt;p&gt;Заключение&lt;/p&gt;

&lt;p&gt;Так что давайте, попробуйте.&lt;/p&gt;

&lt;p&gt;Поиграйте с объектами так же, как и с простым написанным объектом &lt;code&gt;{key: “value”}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Вы будете удивлены тем, что вы можете сделать, и, в свою очередь, познакомитесь с мощностью, которую, глядя на функции таким образом, можно создать.&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://medium.com/better-programming/the-single-most-important-feature-of-javascript-d65ae448eb19&quot; target=&quot;_blank&quot;&gt;&amp;laquo;The Single Most Important Feature of JavaScript&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Да, важнее, чем подъем, замыкания и область видимости Наиболее важной особенностью JavaScript является то, что функции являются объектами. Вот и все. Понимание этого открывает совершенно новое понимание языка JavaScript. В JavaScript функции являются объектами. А в JavaScript объекты имеют свойства, состоящие из пар ключ-значение. А именно, функции JavaScript имеют свойства, которые состоят из пар ключ-значение. Точно так же, как массивы (также объекты JavaScript) имеют свойство prototype, к которому могут быть присоединены уникальные методы (например, Array.prototype.filter&amp;nbsp;()), функции также имеют свойство prototype. Среди свойств Function.prototype есть уникальные свойства, которые дают код функции, который может быть вызван (например,суть вашей функции). Но исполняемый код не является единственным свойством функции. Возможно, вы сталкивались с методами .apply, .bind и .call. Эти методы, как и следовало ожидать, являются методами в свойстве Function.prototype. Function.prototype также имеет свои собственные свойства, такие как .name, который содержит имя функции, и .length, который содержит число аргументов, ожидаемых функцией. Почему это важно и как оно используется? Возможно, вы слышали, что JavaScript описан как функциональный язык. Это означает, что в программах на JavaScript строятся функции. Функции считаются первоклассными, что означает, что функции могут делать что угодно - передаваться в качестве аргументов другим функциям, вставляться в структуры данных, присваиваться переменным и возвращаться другими функциями. Вот несколько примеров, которые показывают, что функции JavaScript на самом деле являются просто объектами Скажем, мы присваиваем функцию переменной myFunction: var myFunction = function (str) { console.log(str) } Мы можем получить доступ к свойству name функции так же, как к свойству в любом объекте: myFunction[“name”] myFunction.name // both return “myFunction” Аналогично, мы можем получить доступ к свойству length функции, которое возвращает количество аргументов, которые принимает функция: myFunction[“length”] myFunction.length // both return 1 // because myFunction takes in one argument, str Мы также можем назначить новые свойства функции — так же, как вы бы назначали свойства любому другому объекту JavaScript: myFunction.myNewProperty = &quot;hello&quot; myFunction.myNewProperty // returns &quot;hello&quot; А поскольку функции в JavaScript являются первоклассными гражданами, мы можем делать с ними практически все, включая назначение других функций в качестве свойств функций. var coolFunc = function() { return 1 } myFunction.coolProperty = coolFunc myFunction.coolProperty // returns function() { return 1 } myFunction.coolProperty() // returns 1 Хотя вы, возможно, никогда не захотите назначать функцию как свойство другой функции на практике, этот простой пример иллюстрирует эту концепцию. Функции - это просто объекты JavaScript, и, как следует, все, что вы можете сделать с объектом в JavaScript, вы можете сделать с помощью функции. Единственная реальная разница с функциями заключается в том, что они, наряду с другими объектами в JavaScript, имеют свои собственные уникальные методы и свойства, один из которых - это метод, который содержит исполняемый код функции, а другой - тот, который вызывает этот исполняемый код. Заключение Так что давайте, попробуйте. Поиграйте с объектами так же, как и с простым написанным объектом {key: “value”}. Вы будете удивлены тем, что вы можете сделать, и, в свою очередь, познакомитесь с мощностью, которую, глядя на функции таким образом, можно создать. Перевод статьи &amp;laquo;The Single Most Important Feature of JavaScript&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/coding/samaya-vazhnaya-osobennost-javascript/1.jpg" /></entry><entry><title type="html">Обзор классов в JavaScript</title><link href="https://codehax.ru/blog/coding/2019-11-01-obzor-klassov-v-javascript.html" rel="alternate" type="text/html" title="Обзор классов в JavaScript" /><published>2019-11-01T00:00:00+04:00</published><updated>2019-11-01T00:00:00+04:00</updated><id>https://codehax.ru/blog/coding/obzor-klassov-v-javascript</id><content type="html" xml:base="https://codehax.ru/blog/coding/2019-11-01-obzor-klassov-v-javascript.html">&lt;p&gt;В этой статье я расскажу о &lt;code&gt;классах&lt;/code&gt; в JavaScript. Мы рассмотрим следующие темы:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Основные классы&lt;/li&gt;
  &lt;li&gt;Поднятие (Hoisting)&lt;/li&gt;
  &lt;li&gt;Подклассы / Наследование&lt;/li&gt;
  &lt;li&gt;Миксины&lt;/li&gt;
  &lt;li&gt;Геттеры и сеттеры&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Основные классы&lt;/h3&gt;

&lt;p&gt;Классы JavaScript, представленные в ECMAScript 2015, в основном являются синтаксическим сахаром по сравнению с существующим наследованием JavaScript на основе прототипов. Классы на самом деле просто &lt;strong&gt;специальная функция&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Один из способов определить класс - использовать &lt;strong&gt;объявление&lt;/strong&gt; &lt;code&gt;класса&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Пример:&lt;/p&gt;

&lt;pre&gt;
class Rectangle {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Выражение класса&lt;/strong&gt; - это еще один способ определить класс. Выражения класса могут быть именованными или безымянными.&lt;/p&gt;

&lt;p&gt;Пример:&lt;/p&gt;

&lt;pre&gt;
// unnamed
let Rectangle = class {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
};

// named
let Rectangle = class Rectangle2 {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
};
&lt;/pre&gt;

&lt;p&gt;Тело класса выполнено в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot; target=&quot;_blank&quot;&gt;строгом режиме&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Метод &lt;strong&gt;конструктора&lt;/strong&gt; - это специальный метод для создания и инициализации объекта, созданного с помощью класса.&lt;/p&gt;

&lt;p&gt;Ключевое слово &lt;code&gt;static&lt;/code&gt; определяет статический метод для класса. Статические методы являются функциями самого класса и не могут быть вызваны из экземпляра класса с помощью ключевого слова &lt;code&gt;this&lt;/code&gt;. Они должны быть вызваны для самого класса - например, &lt;code&gt;Rectangle.area (x, y)&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;Поднятие (Hoisting)&lt;/h3&gt;

&lt;p&gt;Важное различие между &lt;strong&gt;объявлениями функций&lt;/strong&gt; и &lt;strong&gt;объявлениями классов&lt;/strong&gt; заключается в том, что объявления функций &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot; target=&quot;_blank&quot;&gt;поднимаются&lt;/a&gt;, а объявления классов - нет. Что это значит?&lt;/p&gt;

&lt;p&gt;Это означает, что вам нужно сначала объявить свой класс, а затем получить к нему доступ.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/coding/obzor-klassov-v-javascript/2.png&quot; alt=&quot;Никаких ошибок при использовании класса&quot;&gt;
	&lt;figcaption&gt;Никаких ошибок при использовании класса&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;p&gt;В противном случае код, подобный следующему, выдаст Uncaught ReferenceError.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/coding/obzor-klassov-v-javascript/3.png&quot; alt=&quot;Ошибка при использовании класса&quot;&gt;
	&lt;figcaption&gt;Ошибка при использовании класса&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Подклассы / Наследование&lt;/h3&gt;

&lt;p&gt;Ключевое слово &lt;code&gt;extends&lt;/code&gt; используется в &lt;em&gt;объявлениях классов&lt;/em&gt; или &lt;em&gt;выражениях классов&lt;/em&gt; для создания класса как дочернего элемента другого класса.&lt;/p&gt;

&lt;figure&gt;
&lt;pre&gt;
class Animal {
  constructor(name) {
    this.name = name;
  }

  speak() {
    console.log(`${this.name} makes a noise.`);
  }
}

class Dog extends Animal {
  eat() {
    console.log('Yummy Yummy!');
  }
}

const dogA = new Dog('Milu');
dogA.speak(); // Milu makes a noise.
dogA.eat(); // Yummy Yummy!
&lt;/pre&gt;
&lt;figcaption&gt;класс расширяет класс&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Если в подклассе присутствует &lt;code&gt;конструктор&lt;/code&gt;, он должен сначала вызвать &lt;code&gt;super&amp;nbsp;()&lt;/code&gt; перед использованием &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Вы также можете расширить с помощью функции:&lt;/p&gt;

&lt;figure&gt;
	&lt;pre&gt;
function Animal (name) {
  this.name = name;
}

Animal.prototype.speak = function () {
  console.log(`${this.name} makes a noise.`);
}

class Dog extends Animal {
  eat() {
    console.log('Yummy Yummy!');
  }
}

const dogA = new Dog('Milu');
dogA.speak(); // Milu makes a noise.
dogA.eat(); // Yummy Yummy!
	&lt;/pre&gt;
	&lt;figcaption&gt;Использование расширяется с функцией&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Используйте &lt;code&gt;Object.setPrototypeOf&amp;nbsp;()&lt;/code&gt; в случае расширения обычных объектов:&lt;/p&gt;

&lt;figure&gt;
	&lt;pre&gt;
const Animal = {
  speak() {
    console.log(`${this.name} makes a noise.`);
  }
};

class Dog {
  constructor(name) {
    this.name = name;
  }
  eat() {
    console.log('Yummy Yummy!');
  }
}

Object.setPrototypeOf(Dog.prototype, Animal);

const dogA = new Dog('Milu');
dogA.speak(); // Milu makes a noise.
dogA.eat(); // Yummy Yummy!
	&lt;/pre&gt;
	&lt;figcaption&gt;Использование примера object.setPrototypeOf ()&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Ключевое слово &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/super&quot; target=&quot;_blank&quot;&gt;super&lt;/a&gt;&lt;/code&gt; используется для вызова соответствующих методов суперкласса. Это одно из преимуществ перед строгим наследованием на основе прототипа без сахара.&lt;/p&gt;

&lt;figure&gt;
&lt;pre&gt;
class Animal {
  constructor(name) {
    this.name = name;
  }

  speak() {
    console.log(`${this.name} makes a noise.`);
  }
}

class Dog extends Animal {
  speak() {
    super.speak();
    console.log(`${this.name} bark.`);
  }
  eat() {
    console.log('Yummy Yummy!');
  }
}

const dogA = new Dog('Milu');
dogA.speak(); // Milu makes a noise.
dogA.eat(); // Yummy Yummy!
&lt;/pre&gt;
	&lt;figcaption&gt;класс ужинает&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Миксины&lt;/h3&gt;

&lt;p&gt;Согласно &lt;a href=&quot;https://en.wikipedia.org/wiki/Mixin&quot; target=&quot;_blank&quot;&gt;википедии&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;В объектно-ориентированных языках программирования mixin (или mixin-in) - это класс, который содержит методы для использования другими классами, не будучи родительским классом этих других классов.&lt;/blockquote&gt;

&lt;p&gt;Мы создаем объект с общими методами и используем его в качестве шаблона миксина.&lt;/p&gt;

&lt;figure&gt;
	&lt;pre&gt;
const animalBehavior =  {
  speak() {
    console.log(`${this.name} makes a noise.`);
  },
   eat() {
    console.log('Yummy Yummy!');
  }
}

class Dog {
 constructor(name) {
    this.name = name;
  }
}

Object.assign(Dog.prototype, animalBehavior);

const dogA = new Dog('Milu');
dogA.speak(); // Milu makes a noise.
dogA.eat(); // Yummy Yummy!
	&lt;/pre&gt;
	&lt;figcaption&gt;Пример миксина&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Используя этот способ, вы также можете выйти из класса и включить миксин вместе.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/coding/obzor-klassov-v-javascript/3.jpg&quot; alt=&quot;Использование миксина&quot;&gt;
	&lt;figcaption&gt;Dog расширяет Animal и включает в себя миксин animalBehavior&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Мы также можем применять множество миксинов одновременно, используя &lt;code&gt;класс&lt;/code&gt; для миксинов.&lt;/p&gt;

&lt;figure&gt;
	&lt;pre&gt;
const calculatorMixin = Base =&gt; class extends Base {
  calc() {
    console.log('calc method');
  }
};

const randomizerMixin = Base =&gt; class extends Base {
  randomize() {
    console.log('randomize method');
  }
};

class Foo {
 doSomething(){
  console.log('doSomething');
 }
}

class Bar extends calculatorMixin(randomizerMixin(Foo)) {
  constructor(name) {
   super();
   this.name = name;
  }

  logName(){
    console.log('logName , ', this.name);
  }
}

const test = new Bar('nameX');
test.logName(); // logName ,  nameX
test.doSomething(); // doSomething
test.randomize(); // randomize method
test.calc(); // calc method
	&lt;/pre&gt;
	&lt;figcaption&gt;Пример наследования 2 миксинов&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Геттеры и сеттеры&lt;/h3&gt;

&lt;p&gt;Классы также позволяют использовать геттеры и сеттеры.&lt;/p&gt;

&lt;p&gt;Может быть разумно использовать геттеры и сеттеры для ваших свойств, особенно если вы хотите сделать что-то особенное со значением перед их возвратом или перед их установкой.&lt;/p&gt;

&lt;p&gt;Чтобы добавить методы получения и установки в класс, используйте ключевые слова &lt;code&gt;get&lt;/code&gt; и &lt;code&gt;set&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Пример:&lt;/p&gt;

&lt;figure&gt;
	&lt;pre&gt;
class Animal {
  constructor(name) {
    this.name = name;
  }

  speak() {
    console.log(`${this.name} makes a noise.`);
  }
}

class Dog extends Animal {
   get dogName() {
    return `Mr.${this.name}`;
  }
  set dogName(name) {
    this.name = name;
  }
  speak() {
    super.speak();
    console.log(`${this.name} bark.`);
  }
  eat() {
    console.log('Yummy Yummy!');
  }
}

const dogA = new Dog('Milu');
dogA.dogName; // &quot;Mr.Milu&quot;
dogA.dogName = 'Subin'; // &quot;Subin&quot;
dogA.dogName; // &quot;Mr.Subin&quot;
	&lt;/pre&gt;
	&lt;figcaption&gt;образец сеттера и геттера&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Резюме&lt;/p&gt;

&lt;p&gt;Использование &lt;code&gt;класса&lt;/code&gt; дает нам некоторые преимущества в реализации, такие как более простой синтаксис, меньшая подверженность ошибкам, более легкая настройка иерархий наследования и более простой вызов родительского прототипа с помощью &lt;code&gt;super.method&amp;nbsp;()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Надеюсь, эта статья вам пригодится! Не стесняйтесь оставлять любые вопросы в комментариях ниже. Я буду рад помочь!&lt;/p&gt;

&lt;p&gt;Вы можете посмотреть больше примеров &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/demo.js&quot; target=&quot;_blank&quot;&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Главное изображение : &lt;a href=&quot;https://unsplash.com/@asthetik?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot; target=&quot;_blank&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://levelup.gitconnected.com/an-overview-of-classes-in-javascript-1414dda962d1&quot; target=&quot;_blank&quot;&gt;&amp;laquo;An overview of classes in JavaScript&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">В этой статье я расскажу о классах в JavaScript. Мы рассмотрим следующие темы: Основные классы Поднятие (Hoisting) Подклассы / Наследование Миксины Геттеры и сеттеры Основные классы Классы JavaScript, представленные в ECMAScript 2015, в основном являются синтаксическим сахаром по сравнению с существующим наследованием JavaScript на основе прототипов. Классы на самом деле просто специальная функция. Один из способов определить класс - использовать объявление класса. Пример: class Rectangle { constructor(height, width) { this.height = height; this.width = width; } } Выражение класса - это еще один способ определить класс. Выражения класса могут быть именованными или безымянными. Пример: // unnamed let Rectangle = class { constructor(height, width) { this.height = height; this.width = width; } }; // named let Rectangle = class Rectangle2 { constructor(height, width) { this.height = height; this.width = width; } }; Тело класса выполнено в строгом режиме. Метод конструктора - это специальный метод для создания и инициализации объекта, созданного с помощью класса. Ключевое слово static определяет статический метод для класса. Статические методы являются функциями самого класса и не могут быть вызваны из экземпляра класса с помощью ключевого слова this. Они должны быть вызваны для самого класса - например, Rectangle.area (x, y). Поднятие (Hoisting) Важное различие между объявлениями функций и объявлениями классов заключается в том, что объявления функций поднимаются, а объявления классов - нет. Что это значит? Это означает, что вам нужно сначала объявить свой класс, а затем получить к нему доступ. Никаких ошибок при использовании класса В противном случае код, подобный следующему, выдаст Uncaught ReferenceError. Ошибка при использовании класса Подклассы / Наследование Ключевое слово extends используется в объявлениях классов или выражениях классов для создания класса как дочернего элемента другого класса. class Animal { constructor(name) { this.name = name; } speak() { console.log(`${this.name} makes a noise.`); } } class Dog extends Animal { eat() { console.log('Yummy Yummy!'); } } const dogA = new Dog('Milu'); dogA.speak(); // Milu makes a noise. dogA.eat(); // Yummy Yummy! класс расширяет класс Если в подклассе присутствует конструктор, он должен сначала вызвать super&amp;nbsp;() перед использованием this. Вы также можете расширить с помощью функции: function Animal (name) { this.name = name; } Animal.prototype.speak = function () { console.log(`${this.name} makes a noise.`); } class Dog extends Animal { eat() { console.log('Yummy Yummy!'); } } const dogA = new Dog('Milu'); dogA.speak(); // Milu makes a noise. dogA.eat(); // Yummy Yummy! Использование расширяется с функцией Используйте Object.setPrototypeOf&amp;nbsp;() в случае расширения обычных объектов: const Animal = { speak() { console.log(`${this.name} makes a noise.`); } }; class Dog { constructor(name) { this.name = name; } eat() { console.log('Yummy Yummy!'); } } Object.setPrototypeOf(Dog.prototype, Animal); const dogA = new Dog('Milu'); dogA.speak(); // Milu makes a noise. dogA.eat(); // Yummy Yummy! Использование примера object.setPrototypeOf () Ключевое слово super используется для вызова соответствующих методов суперкласса. Это одно из преимуществ перед строгим наследованием на основе прототипа без сахара. class Animal { constructor(name) { this.name = name; } speak() { console.log(`${this.name} makes a noise.`); } } class Dog extends Animal { speak() { super.speak(); console.log(`${this.name} bark.`); } eat() { console.log('Yummy Yummy!'); } } const dogA = new Dog('Milu'); dogA.speak(); // Milu makes a noise. dogA.eat(); // Yummy Yummy! класс ужинает Миксины Согласно википедии. В объектно-ориентированных языках программирования mixin (или mixin-in) - это класс, который содержит методы для использования другими классами, не будучи родительским классом этих других классов. Мы создаем объект с общими методами и используем его в качестве шаблона миксина. const animalBehavior = { speak() { console.log(`${this.name} makes a noise.`); }, eat() { console.log('Yummy Yummy!'); } } class Dog { constructor(name) { this.name = name; } } Object.assign(Dog.prototype, animalBehavior); const dogA = new Dog('Milu'); dogA.speak(); // Milu makes a noise. dogA.eat(); // Yummy Yummy! Пример миксина Используя этот способ, вы также можете выйти из класса и включить миксин вместе. Dog расширяет Animal и включает в себя миксин animalBehavior Мы также можем применять множество миксинов одновременно, используя класс для миксинов. const calculatorMixin = Base =&gt; class extends Base { calc() { console.log('calc method'); } }; const randomizerMixin = Base =&gt; class extends Base { randomize() { console.log('randomize method'); } }; class Foo { doSomething(){ console.log('doSomething'); } } class Bar extends calculatorMixin(randomizerMixin(Foo)) { constructor(name) { super(); this.name = name; } logName(){ console.log('logName , ', this.name); } } const test = new Bar('nameX'); test.logName(); // logName , nameX test.doSomething(); // doSomething test.randomize(); // randomize method test.calc(); // calc method Пример наследования 2 миксинов Геттеры и сеттеры Классы также позволяют использовать геттеры и сеттеры. Может быть разумно использовать геттеры и сеттеры для ваших свойств, особенно если вы хотите сделать что-то особенное со значением перед их возвратом или перед их установкой. Чтобы добавить методы получения и установки в класс, используйте ключевые слова get и set. Пример: class Animal { constructor(name) { this.name = name; } speak() { console.log(`${this.name} makes a noise.`); } } class Dog extends Animal { get dogName() { return `Mr.${this.name}`; } set dogName(name) { this.name = name; } speak() { super.speak(); console.log(`${this.name} bark.`); } eat() { console.log('Yummy Yummy!'); } } const dogA = new Dog('Milu'); dogA.dogName; // &quot;Mr.Milu&quot; dogA.dogName = 'Subin'; // &quot;Subin&quot; dogA.dogName; // &quot;Mr.Subin&quot; образец сеттера и геттера Резюме Использование класса дает нам некоторые преимущества в реализации, такие как более простой синтаксис, меньшая подверженность ошибкам, более легкая настройка иерархий наследования и более простой вызов родительского прототипа с помощью super.method&amp;nbsp;(). Надеюсь, эта статья вам пригодится! Не стесняйтесь оставлять любые вопросы в комментариях ниже. Я буду рад помочь! Вы можете посмотреть больше примеров здесь. Главное изображение : Unsplash Перевод статьи &amp;laquo;An overview of classes in JavaScript&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/coding/obzor-klassov-v-javascript/1.jpg" /></entry><entry><title type="html">29 уроков по коллажу в Photoshop для начинающих</title><link href="https://codehax.ru/blog/graphic/2019-10-13-29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih.html" rel="alternate" type="text/html" title="29 уроков по коллажу в Photoshop для начинающих" /><published>2019-10-13T00:00:00+04:00</published><updated>2019-10-13T00:00:00+04:00</updated><id>https://codehax.ru/blog/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih</id><content type="html" xml:base="https://codehax.ru/blog/graphic/2019-10-13-29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih.html">&lt;p&gt;Если вы любили делать коллажи с помощью ножниц, клея, маминых журналов и подписок папы, когда вы росли, нет причин останавливаться сейчас. Разница лишь в том, что в наши дни вы можете создать потрясающий коллаж с помощью Photoshop!&lt;/p&gt;

&lt;p&gt;Вот некоторые из самых интересных учебных пособий по коллажу в Photoshop, которые научат вас сочетать фотографию с нарисованными от руки элементами и превращать обычное изображение в удивительное манипулирование фотографиями. Вы узнаете, как объединить множество объектов в одно потрясающее изображение.&lt;/p&gt;

&lt;p&gt;Кто знает, позже вы сможете создавать подарочные открытки, открытки или даже красивую обложку для своей книги. Давайте вдохновляться!&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.webdesignerdepot.com/2009/04/how-to-make-a-photoshop-montage/&quot; target=&quot;_blank&quot;&gt;#1&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.webdesignerdepot.com/2009/04/how-to-make-a-photoshop-montage/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/2.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://design.tutsplus.com/tutorials/&lt;create-a-mixed-style-collage--psd-11581&gt;&lt;/create-a-mixed-style-collage--psd-11581&gt;&quot; target=&quot;_blank&quot;&gt;#2&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://design.tutsplus.com/tutorials/&lt;create-a-mixed-style-collage--psd-11581&gt;&lt;/create-a-mixed-style-collage--psd-11581&gt;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/3.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;http://psd.fanextra.com/tutorials/designing/learn-how-to-design-a-charming-collage-composition/&quot; target=&quot;_blank&quot;&gt;#3&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;http://psd.fanextra.com/tutorials/designing/learn-how-to-design-a-charming-collage-composition/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/4.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;http://psd.fanextra.com/tutorials/photo-effects/create-a-nature-inspired-digital-illustration-in-photoshop/&quot; target=&quot;_blank&quot;&gt;#4&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;http://psd.fanextra.com/tutorials/photo-effects/create-a-nature-inspired-digital-illustration-in-photoshop/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/5.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://photoshoptutorials.ws/photoshop-tutorials/photo-manipulation/futuristic-collage/&quot; target=&quot;_blank&quot;&gt;#5&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://photoshoptutorials.ws/photoshop-tutorials/photo-manipulation/futuristic-collage/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/6.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/create-stunning-pin-up-collage/?pn=&lt;1&gt;&lt;/1&gt;&quot; target=&quot;_blank&quot;&gt;#6&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/create-stunning-pin-up-collage/?pn=&lt;1&gt;&lt;/1&gt;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/7.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/computer-arts/&lt;surreal-collage-creation-6099070&gt;&lt;/surreal-collage-creation-6099070&gt;&quot; target=&quot;_blank&quot;&gt;#7&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/computer-arts/&lt;surreal-collage-creation-6099070&gt;&lt;/surreal-collage-creation-6099070&gt;&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/8.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://design.tutsplus.com/tutorials/recycle-vintage-images-to-create-a-photoshop-collage--psd-1967&quot; target=&quot;_blank&quot;&gt;#8&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://design.tutsplus.com/tutorials/recycle-vintage-images-to-create-a-photoshop-collage--psd-1967&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/9.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.photoshoptutorials.ws/photoshop-tutorials/photo-manipulation/how-to-create-an-abstract-photo-manipulation/&quot; target=&quot;_blank&quot;&gt;#9&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.photoshoptutorials.ws/photoshop-tutorials/photo-manipulation/how-to-create-an-abstract-photo-manipulation/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/10.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;http://psd.fanextra.com/tutorials/designing/create-a-mock-retro-poster-concept/&quot; target=&quot;_blank&quot;&gt;#10&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;http://psd.fanextra.com/tutorials/designing/create-a-mock-retro-poster-concept/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/11.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/create-digital-collage-from-hand-drawn-elements/&quot; target=&quot;_blank&quot;&gt;#11&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/create-digital-collage-from-hand-drawn-elements/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/12.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;http://crazypixels.net/photoshop-tutorial-create-an-amazing-summer-flyer-design/&quot; target=&quot;_blank&quot;&gt;#12&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;http://crazypixels.net/photoshop-tutorial-create-an-amazing-summer-flyer-design/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/13.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/computer-arts/creative-collages-and-mixed-media-effects-3099144&quot; target=&quot;_blank&quot;&gt;#13&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/computer-arts/creative-collages-and-mixed-media-effects-3099144&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/14.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/advanced-compositing-techniques/&quot; target=&quot;_blank&quot;&gt;#14&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/advanced-compositing-techniques/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/15.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/computer-arts/new-take-cityscape-collage-12108727&quot; target=&quot;_blank&quot;&gt;#15&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/computer-arts/new-take-cityscape-collage-12108727&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/16.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/computer-arts/be-clear-through-abstraction-3108899&quot; target=&quot;_blank&quot;&gt;#16&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/computer-arts/be-clear-through-abstraction-3108899&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/17.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/computer-arts/construct-beautiful-distortions-10108760&quot; target=&quot;_blank&quot;&gt;#17&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/computer-arts/construct-beautiful-distortions-10108760&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/18.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://abduzeedo.com/high-rise-b-movie-poster-case-study-falcon-white-design&quot; target=&quot;_blank&quot;&gt;#18&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://abduzeedo.com/high-rise-b-movie-poster-case-study-falcon-white-design&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/19.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/create-atmospheric-digicollages-4114295&quot; target=&quot;_blank&quot;&gt;#19&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/create-atmospheric-digicollages-4114295&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/20.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://abduzeedo.com/case-study-deadliest-catch&quot; target=&quot;_blank&quot;&gt;#20&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://abduzeedo.com/case-study-deadliest-catch&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/21.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;http://tutorialfreakz.com/collage-of-polaroids/&quot; target=&quot;_blank&quot;&gt;#21&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;http://tutorialfreakz.com/collage-of-polaroids/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/22.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/retro-collage-techniques/&quot; target=&quot;_blank&quot;&gt;#22&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.digitalartsonline.co.uk/tutorials/photoshop/retro-collage-techniques/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/23.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.photoshoptutorials.ws/photoshop-tutorials/photo-manipulation/how-to-create-an-alice-in-wonderland-inspired-artwork-with-photoshop/&quot; target=&quot;_blank&quot;&gt;#23&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.photoshoptutorials.ws/photoshop-tutorials/photo-manipulation/how-to-create-an-alice-in-wonderland-inspired-artwork-with-photoshop/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/24.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/photoshop/add-vintage-feel-custom-brush-strokes-3132710&quot; target=&quot;_blank&quot;&gt;#24&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/photoshop/add-vintage-feel-custom-brush-strokes-3132710&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/25.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/photoshop/create-mixed-media-collage-4137494&quot; target=&quot;_blank&quot;&gt;#25&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/photoshop/create-mixed-media-collage-4137494&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/26.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/photoshop/kaleidoscopic-collage-effect-5132671&quot; target=&quot;_blank&quot;&gt;#26&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/photoshop/kaleidoscopic-collage-effect-5132671&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/27.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://www.creativebloq.com/computer-arts/create-abstract-collage-effect-2137606&quot; target=&quot;_blank&quot;&gt;#27&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://www.creativebloq.com/computer-arts/create-abstract-collage-effect-2137606&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/28.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;https://design.tutsplus.com/tutorials/digitally-collage-a-camouflage-paper-jacket--psd-202&quot; target=&quot;_blank&quot;&gt;#28&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;https://design.tutsplus.com/tutorials/digitally-collage-a-camouflage-paper-jacket--psd-202&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/29.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;h3&gt;&lt;a href=&quot;http://psd.fanextra.com/tutorials/photo-effects/create-a-striking-collage-fusing-ancient-and-modern/&quot; target=&quot;_blank&quot;&gt;#29&lt;/a&gt;&lt;/h3&gt;

&lt;a href=&quot;http://psd.fanextra.com/tutorials/photo-effects/create-a-striking-collage-fusing-ancient-and-modern/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;img/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/30.jpg&quot; alt=&quot;урок по коллажу в Photoshop&quot;&gt;&lt;/img&gt;&lt;/a&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://www.hongkiat.com/blog/collage-photoshop-tutorials/&quot; target=&quot;_blank&quot;&gt;&amp;laquo;29 Collage Photoshop Tutorials for Beginners&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Если вы любили делать коллажи с помощью ножниц, клея, маминых журналов и подписок папы, когда вы росли, нет причин останавливаться сейчас. Разница лишь в том, что в наши дни вы можете создать потрясающий коллаж с помощью Photoshop! Вот некоторые из самых интересных учебных пособий по коллажу в Photoshop, которые научат вас сочетать фотографию с нарисованными от руки элементами и превращать обычное изображение в удивительное манипулирование фотографиями. Вы узнаете, как объединить множество объектов в одно потрясающее изображение. Кто знает, позже вы сможете создавать подарочные открытки, открытки или даже красивую обложку для своей книги. Давайте вдохновляться! #1 &quot; target=&quot;_blank&quot;&gt;#2 &quot; target=&quot;_blank&quot;&gt; #3 #4 #5 &quot; target=&quot;_blank&quot;&gt;#6 &quot; target=&quot;_blank&quot;&gt; &quot; target=&quot;_blank&quot;&gt;#7 &quot; target=&quot;_blank&quot;&gt; #8 #9 #10 #11 #12 #13 #14 #15 #16 #17 #18 #19 #20 #21 #22 #23 #24 #25 #26 #27 #28 #29 Перевод статьи &amp;laquo;29 Collage Photoshop Tutorials for Beginners&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/graphic/29-urokov-po-kollazhu-v-photoshop-dlya-nachinayushhih/1.jpg" /></entry><entry><title type="html">Случаи применения Android-сталкера в 2019 году выросли на 373%</title><link href="https://codehax.ru/blog/technology/2019-10-07-sluchai-primeneniya-android-stalkera-v-2019-godu-vyrosli-na-373.html" rel="alternate" type="text/html" title="Случаи применения Android-сталкера в 2019 году выросли на 373%" /><published>2019-10-07T00:00:00+04:00</published><updated>2019-10-07T00:00:00+04:00</updated><id>https://codehax.ru/blog/technology/sluchai-primeneniya-android-stalkera-v-2019-godu-vyrosli-na-373</id><content type="html" xml:base="https://codehax.ru/blog/technology/2019-10-07-sluchai-primeneniya-android-stalkera-v-2019-godu-vyrosli-na-373.html">&lt;p&gt;Приложения-сталкеры - программное обеспечение, используемое для слежки за сообщениями пользователей, информацией о вызовах и местоположениями GPS. Количество этих приложений выросло на ошеломляющие 373 процента в первые восемь месяцев 2019 года по сравнению с аналогичным периодом прошлого года.&lt;/p&gt;

&lt;p&gt;Результаты, &lt;a href=&quot;https://securelist.com/the-state-of-stalkerware-in-2019/93634/&quot; target=&quot;_blank&quot;&gt;раскрытые фирмой Kaspersky&lt;/a&gt;, занимающейся кибербезопасностью, обнаружили 37 532 пользователя, которые сталкивались с такими приложениями хотя бы раз, что на 35% больше, чем в прошлом году.&lt;/p&gt;

&lt;p&gt;Россия, Индия, Бразилия и США стали заметными регионами для Android-сталкеров во всем мире, в то время как Германия, Италия и Великобритания заняли первые три места в Европе.&lt;/p&gt;

&lt;p&gt;Шпионское и сталкерное ПО являются «вредоносными программами» в том смысле, что они представляют собой различные типы вредоносных программ, которые могут привести к краже личных данных путем скрытой записи электронной почты, SMS-сообщений и прослушивания телефонных звонков. Сталкер, однако, обычно используется людьми, чтобы шпионить за близкими им людьми.&lt;/p&gt;

&lt;p&gt;«Эти свободно продающиеся программы по надзору за потребителями часто используются для слежки за коллегами, членами семьи или партнерами и пользуются большим спросом», - говорят исследователи. «За относительно скромную плату, иногда всего 7 долларов в месяц, эти приложения остаются скрытыми, информируя при этом своих операторов о действиях устройства, таких как местоположение его владельца, история браузера, текстовые сообщения, чаты в социальных сетях и многое другое. Некоторые из них могут даже делать видео и голосовые записи.»&lt;/p&gt;

&lt;p&gt;Всего Kaspersky обнаружил 518 223 случая, когда на устройствах пользователей было зарегистрировано присутствие stalkerware или была предпринята попытка установить шпионское ПО без согласия пострадавших.&lt;/p&gt;

&lt;p&gt;Stalkerware нужен вектор, чтобы проникнуть в защиту мобильных устройств цели. Чаще всего это делается путем ручной установки приложения на смартфон или планшет. В других случаях оно управляется удаленно через &lt;a href=&quot;https://usa.kaspersky.com/resource-center/definitions/spear-phishing&quot; target=&quot;_blank&quot;&gt;фишинговые электронные письма&lt;/a&gt;, содержащие вредоносные вложения или ссылки, которые тайно скачивают приложение без ведома пользователя.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;img/technology/sluchai-primeneniya-android-stalkera-v-2019-godu-vyrosli-na-373/1.jpg&quot; alt=&quot;График роста сталкеров&quot;&gt;
	&lt;figcaption&gt;Рост приложений-сталкеров в 2019г.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;После установки они оказались маскирующимися под приложения для родительского контроля, предназначенные для мониторинга местонахождения детей, или под приложения для защиты от кражи, которые работают скрытно, чтобы избежать обнаружения и удаления.&lt;/p&gt;

&lt;p&gt;Например, TheTruthSpy позиционирует себя как «&lt;a href=&quot;https://thetruthspy.com/catch-cheating-spouses-with-thetruthspy/&quot; target=&quot;_blank&quot;&gt;лучшее приложение ловли неверных супругов, доступное на сегодняшний день&lt;/a&gt;», с функциями для отслеживания местоположения, управления вызовами, отслеживания действий в Интернете и шпионажа для приложений мгновенного обмена сообщениями, таких как WhatsApp, Facebook Messenger, Kik, Viber, и Snapchat. Более того, это совершенно невозможно обнаружить.&lt;/p&gt;

&lt;p&gt;Стоит отметить, что хотя WhatsApp и имеет сквозное шифрование (end-to-end encrypted, E2EE), функция безопасности бесполезна, когда сама конечная точка скомпрометирована с программным обеспечением для наблюдения.&lt;/p&gt;

&lt;p&gt;«Может потребоваться время, чтобы выяснить роль сталкеров в общей обстановке киберугроз, но в настоящее время фиксируется все больше инцидентов», - сказали в Kaspersky. «Те, у кого плохие намерения, могут использовать его для отслеживания электронных писем сотрудников, отслеживания движений детей и даже слежки за тем, чем занимается партнер. Такое использование может привести к притеснению, наблюдению без согласия, преследованию и даже домашнему насилию.»&lt;/p&gt;

&lt;p&gt;Это не первый случай, когда приложения для преследователей были найдены на Android. Ранее в июле этого года исследователи из системы кибербезопасности Avast &lt;a href=&quot;https://blog.avast.com/avast-identifies-stalker-apps&quot; target=&quot;_blank&quot;&gt;обнаружили в Google Play Store&lt;/a&gt; восемь таких приложений, которые позволяли людям следить за сотрудниками, романтическими партнерами или детьми, побуждая Google от них отказаться.&lt;/p&gt;

&lt;p&gt;Шпионское и сталкерное ПО специально разработано для того, чтобы их было трудно найти и удалить. Чтобы обезопасить себя от таких угроз, важно запустить сканирование на наличие вредоносных программ и физически обезопасить свое устройство с помощью надежного пароля. Если ничего не помогает, решительным шагом будет сброс вашего телефона к заводским настройкам.&lt;/p&gt;

&lt;p class=&quot;https://thenextweb.com/security/2019/10/07/android-stalker-app-cases-increase-by-373-in-2019/&quot;&gt;Перевод статьи &lt;a href=&quot;source&quot; target=&quot;_blank&quot;&gt;&amp;laquo;Android stalker app cases increase by 373% in 2019&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Приложения-сталкеры - программное обеспечение, используемое для слежки за сообщениями пользователей, информацией о вызовах и местоположениями GPS. Количество этих приложений выросло на ошеломляющие 373 процента в первые восемь месяцев 2019 года по сравнению с аналогичным периодом прошлого года. Результаты, раскрытые фирмой Kaspersky, занимающейся кибербезопасностью, обнаружили 37 532 пользователя, которые сталкивались с такими приложениями хотя бы раз, что на 35% больше, чем в прошлом году. Россия, Индия, Бразилия и США стали заметными регионами для Android-сталкеров во всем мире, в то время как Германия, Италия и Великобритания заняли первые три места в Европе. Шпионское и сталкерное ПО являются «вредоносными программами» в том смысле, что они представляют собой различные типы вредоносных программ, которые могут привести к краже личных данных путем скрытой записи электронной почты, SMS-сообщений и прослушивания телефонных звонков. Сталкер, однако, обычно используется людьми, чтобы шпионить за близкими им людьми. «Эти свободно продающиеся программы по надзору за потребителями часто используются для слежки за коллегами, членами семьи или партнерами и пользуются большим спросом», - говорят исследователи. «За относительно скромную плату, иногда всего 7 долларов в месяц, эти приложения остаются скрытыми, информируя при этом своих операторов о действиях устройства, таких как местоположение его владельца, история браузера, текстовые сообщения, чаты в социальных сетях и многое другое. Некоторые из них могут даже делать видео и голосовые записи.» Всего Kaspersky обнаружил 518 223 случая, когда на устройствах пользователей было зарегистрировано присутствие stalkerware или была предпринята попытка установить шпионское ПО без согласия пострадавших. Stalkerware нужен вектор, чтобы проникнуть в защиту мобильных устройств цели. Чаще всего это делается путем ручной установки приложения на смартфон или планшет. В других случаях оно управляется удаленно через фишинговые электронные письма, содержащие вредоносные вложения или ссылки, которые тайно скачивают приложение без ведома пользователя. Рост приложений-сталкеров в 2019г. После установки они оказались маскирующимися под приложения для родительского контроля, предназначенные для мониторинга местонахождения детей, или под приложения для защиты от кражи, которые работают скрытно, чтобы избежать обнаружения и удаления. Например, TheTruthSpy позиционирует себя как «лучшее приложение ловли неверных супругов, доступное на сегодняшний день», с функциями для отслеживания местоположения, управления вызовами, отслеживания действий в Интернете и шпионажа для приложений мгновенного обмена сообщениями, таких как WhatsApp, Facebook Messenger, Kik, Viber, и Snapchat. Более того, это совершенно невозможно обнаружить. Стоит отметить, что хотя WhatsApp и имеет сквозное шифрование (end-to-end encrypted, E2EE), функция безопасности бесполезна, когда сама конечная точка скомпрометирована с программным обеспечением для наблюдения. «Может потребоваться время, чтобы выяснить роль сталкеров в общей обстановке киберугроз, но в настоящее время фиксируется все больше инцидентов», - сказали в Kaspersky. «Те, у кого плохие намерения, могут использовать его для отслеживания электронных писем сотрудников, отслеживания движений детей и даже слежки за тем, чем занимается партнер. Такое использование может привести к притеснению, наблюдению без согласия, преследованию и даже домашнему насилию.» Это не первый случай, когда приложения для преследователей были найдены на Android. Ранее в июле этого года исследователи из системы кибербезопасности Avast обнаружили в Google Play Store восемь таких приложений, которые позволяли людям следить за сотрудниками, романтическими партнерами или детьми, побуждая Google от них отказаться. Шпионское и сталкерное ПО специально разработано для того, чтобы их было трудно найти и удалить. Чтобы обезопасить себя от таких угроз, важно запустить сканирование на наличие вредоносных программ и физически обезопасить свое устройство с помощью надежного пароля. Если ничего не помогает, решительным шагом будет сброс вашего телефона к заводским настройкам. Перевод статьи &amp;laquo;Android stalker app cases increase by 373% in 2019&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/technology/sluchai-primeneniya-android-stalkera-v-2019-godu-vyrosli-na-373/1.jpg" /></entry><entry><title type="html">В защиту хакерства</title><link href="https://codehax.ru/blog/technology/2019-09-14-v-zashhitu-hakerstva.html" rel="alternate" type="text/html" title="В защиту хакерства" /><published>2019-09-14T00:00:00+04:00</published><updated>2019-09-14T00:00:00+04:00</updated><id>https://codehax.ru/blog/technology/v-zashhitu-hakerstva</id><content type="html" xml:base="https://codehax.ru/blog/technology/2019-09-14-v-zashhitu-hakerstva.html">&lt;p&gt;Когда ваш бизнес в интернете только начинается, хакерство кажется просто плохой вещью: катастрофическое в худшем случае и неприятное в лучшем случае. Но есть ли какой-то этический вариант использования для взлома? И если да, то где грань между взломом и использованием взлома?&lt;/p&gt;

&lt;p&gt;Кто-то испортил ваш сайт, опубликовал грубое или непристойное изображение и назвал вас взрослым эквивалентом болвана? Что ж, пора собирать резервные копии и, возможно, поменять хосты.&lt;/p&gt;

&lt;p&gt;Вас нельзя винить в том, что вы так думаете. В популярной культуре хакеры являются либо гнусными, злодейскими и часто очень привлекательными ботаниками, либо они полезны ботаникам разной внешности, которые здесь, чтобы пошутить, и рассказать миру, какой это ужасный злой плохой человек, слив его информацию. И поскольку вы не собираетесь никого бомбить, почему вы имеете какое-либо отношение к &amp;laquo;этическому&amp;raquo; хакеру?&lt;/p&gt;

&lt;p&gt;Как обычно, Голливуд не прав и глуп. Вот история, которую я рассказывал ранее о WDD:&amp;nbsp;&lt;strong&gt;&amp;laquo;хакер&amp;raquo; раньше был термином для кого-то, кто изучал технологию, сломал ее и собрал воедино&lt;/strong&gt;, чтобы понять и извлечь уроки из нее. Вредоносных хакеров называли &amp;laquo;взломщиками&amp;raquo; (это название не прижилось по многим различным причинам…).&lt;/p&gt;

&lt;p&gt;Но слово &amp;laquo;хакер&amp;raquo; было кооптировано, так что теперь эти любопытные типы ботаников называют &amp;laquo;этическими хакерами&amp;raquo; или &amp;laquo;хакерами&amp;raquo; в &amp;laquo;белой шляпе&amp;raquo;, и они являются важной частью технической экосистемы. Вот почему:&lt;/p&gt;

&lt;h3&gt;Получение знаний и понимания&lt;/h3&gt;

&lt;p&gt;Эта основная предпосылка, которую я упомянул выше? Разбить его на части и собрать? Это отличительная черта всей индустрии программного обеспечения (и оборудования) с открытым исходным кодом. Это то, как люди учатся и развиваются как разработчики (или разработчики оборудования).&lt;/p&gt;

&lt;p&gt;Люди тоже делают это с помощью запатентованной технологии, но владельцы (а иногда и правоохранительные органы), как правило, недовольны этим. Даже тогда, это не обязательно плохо, по моему мнению. Если вы когда-нибудь ремонтировали продукт Apple дешевле, чем первоначальный продукт, или даже у вас был взломанный телефон, вы должны поблагодарить этических хакеров.&lt;/p&gt;

&lt;p&gt;Что касается веб-дизайнеров, где бы мы были без &amp;laquo;View Source&amp;raquo;?&lt;/p&gt;

&lt;h3&gt;Тестирование вашей безопасности&lt;/h3&gt;

&lt;p&gt;Это один из крупных источников денег в сообществе этических хакеров: хакеры взломывают вашу систему, чтобы помочь вам выяснить, где проблемы. Это практика, также известная как &amp;laquo;тестирование на проникновение&amp;raquo; (penetration testing), которая обычно сокращается до &amp;laquo;pen testing&amp;raquo;, потому что (и вы можете процитировать меня по этому поводу) всем программистам в основном двенадцать лет.&lt;/p&gt;

&lt;p&gt;Иногда компании нанимают этических хакеров, чтобы сделать это, но больше чем несколько хакеров работают внештатно, представляя проблемы, которые они находят в обмен на вознаграждения, выплачиваемые компаниями, которые они &amp;laquo;взламывают&amp;raquo;. Компании с большим бюджетом и умные рекрутеры часто стремятся нанимать лучших хакеров, которые пробуют свои навыки в системах компании.&lt;/p&gt;

&lt;h3&gt;В поисках другого вида хакеров&lt;/h3&gt;

&lt;p&gt;Когда в вашей сети появится что-то странное, кому вы позвоните? Здесь применимо высказывание &amp;laquo;Рыбак рыбака видит издалека&amp;raquo;, может быть, больше, чем в остальной части… жизни. Найм хакеров не только для того, чтобы помочь вам проверить вашу оборону, но и для того, чтобы в первую очередь выстроить их, и выследить злоумышленников - еще один источник больших денег.&lt;/p&gt;

&lt;p&gt;Конечно, их официальное название, вероятно, будет чем-то вроде &amp;laquo;Эксперта по информационной безопасности&amp;raquo; или, возможно, &amp;laquo;Тейлор Свифт&amp;raquo;. Но не заблуждайтесь, они используют те же навыки и инструменты, что и &amp;laquo;хакеры&amp;raquo;.&lt;/p&gt;

&lt;p&gt;Хорошо, хорошо, я еще раз объясню это: Тейлор Свифт, в данном случае, псевдоним известного в Twitter ИТ-специалиста, который делает огромную работу, разбивая базовые рекомендации &amp;laquo;infosec&amp;raquo; для всех. Они делают это во время ролевой игры, как настоящий Тейлор Свифт, и пишут короткие фантастические рассказы / фанфики Кортаны. Это Кортана, AI в Halo, или виртуальный помощник, созданный Microsoft? Да.&lt;/p&gt;

&lt;h3&gt;Борьба с катастрофами&lt;/h3&gt;

&lt;p&gt;Вы когда-нибудь были заперты в своем доме, и вам пришлось отправить ребенка, поднимающегося через одно из окон второго этажа? (Я помню, что был этим ребенком. Это было весело.) Или просто вызвали слесаря? В редких случаях все может происходить очень, невероятно неправильно и запереть вас от ваших собственных ИТ-систем.&lt;/p&gt;

&lt;p&gt;Предполагая, что вы не можете просто отключить устройство от сети и перезагрузить компьютер или попросить своих поставщиков услуг отпустить вас обратно, вы можете нанять хакера. Я сказал, что это было редкостью. Большинство разработчиков программного обеспечения умнее этого.&lt;/p&gt;

&lt;p&gt;Но что, если вас взломает кто-то, кому вы не заплатили за это, и вы заблокированы, например, во всех своих учетных записях в социальных сетях, а служба поддержки ушла на очень долгий перерыв на кофе? Были времена, когда люди нанимали хакеров, чтобы вернуть им то, что по праву принадлежит им. Такого рода действия в лучшем случае оказываются в серой зоне (Twitter не будет счастлив, когда их взломают, независимо от причины), но ... это происходит.&lt;/p&gt;

&lt;h3&gt;Расширение возможностей подключения означает, что мы нуждаемся в этических хакерах сейчас больше, чем когда-либо&lt;/h3&gt;

&lt;p&gt;Чем больше вашего бизнеса происходит в Интернете, тем больше вам нужно усилить свою безопасность. Может показаться, что этические хакеры в основном просто решают проблему, созданную другими хакерами, и ... это не совсем неправильно. Но это и не их вина. Люди просто люди, и люди иногда делают плохие вещи.&lt;/p&gt;

&lt;p&gt;Это похоже на то, как люди грабят магазины, и поэтому магазины нанимают охрану. Этические хакеры являются частью экосистемы, потому что они нам нужны. Нам нужно, чтобы они выяснили, как работают наши технологии, чтобы честные компании, ориентированные на получение прибыли, руководствовались данными. Они нужны нам для защиты от злоумышленников и разработки нашего антивирусного и межсетевого программного обеспечения.&lt;/p&gt;

&lt;p&gt;И, прежде всего, нам нужно, чтобы они провели свои тесты на проникновение вглубь наших сетей и рассказали нам, как трудно в них войти (может, я не программист, но мне тоже двенадцать лет).&lt;/p&gt;

&lt;p&gt;Главное изображение : &lt;a href=&quot;https://unsplash.com/@vipul_uthaiah?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot; target=&quot;_blank&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;source&quot;&gt;Перевод статьи &lt;a href=&quot;https://www.webdesignerdepot.com/2019/09/in-defence-of-hacking/&quot; target=&quot;_blank&quot;&gt;&amp;laquo;In Defence of Hacking&amp;raquo;&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Когда ваш бизнес в интернете только начинается, хакерство кажется просто плохой вещью: катастрофическое в худшем случае и неприятное в лучшем случае. Но есть ли какой-то этический вариант использования для взлома? И если да, то где грань между взломом и использованием взлома? Кто-то испортил ваш сайт, опубликовал грубое или непристойное изображение и назвал вас взрослым эквивалентом болвана? Что ж, пора собирать резервные копии и, возможно, поменять хосты. Вас нельзя винить в том, что вы так думаете. В популярной культуре хакеры являются либо гнусными, злодейскими и часто очень привлекательными ботаниками, либо они полезны ботаникам разной внешности, которые здесь, чтобы пошутить, и рассказать миру, какой это ужасный злой плохой человек, слив его информацию. И поскольку вы не собираетесь никого бомбить, почему вы имеете какое-либо отношение к &amp;laquo;этическому&amp;raquo; хакеру? Как обычно, Голливуд не прав и глуп. Вот история, которую я рассказывал ранее о WDD:&amp;nbsp;&amp;laquo;хакер&amp;raquo; раньше был термином для кого-то, кто изучал технологию, сломал ее и собрал воедино, чтобы понять и извлечь уроки из нее. Вредоносных хакеров называли &amp;laquo;взломщиками&amp;raquo; (это название не прижилось по многим различным причинам…). Но слово &amp;laquo;хакер&amp;raquo; было кооптировано, так что теперь эти любопытные типы ботаников называют &amp;laquo;этическими хакерами&amp;raquo; или &amp;laquo;хакерами&amp;raquo; в &amp;laquo;белой шляпе&amp;raquo;, и они являются важной частью технической экосистемы. Вот почему: Получение знаний и понимания Эта основная предпосылка, которую я упомянул выше? Разбить его на части и собрать? Это отличительная черта всей индустрии программного обеспечения (и оборудования) с открытым исходным кодом. Это то, как люди учатся и развиваются как разработчики (или разработчики оборудования). Люди тоже делают это с помощью запатентованной технологии, но владельцы (а иногда и правоохранительные органы), как правило, недовольны этим. Даже тогда, это не обязательно плохо, по моему мнению. Если вы когда-нибудь ремонтировали продукт Apple дешевле, чем первоначальный продукт, или даже у вас был взломанный телефон, вы должны поблагодарить этических хакеров. Что касается веб-дизайнеров, где бы мы были без &amp;laquo;View Source&amp;raquo;? Тестирование вашей безопасности Это один из крупных источников денег в сообществе этических хакеров: хакеры взломывают вашу систему, чтобы помочь вам выяснить, где проблемы. Это практика, также известная как &amp;laquo;тестирование на проникновение&amp;raquo; (penetration testing), которая обычно сокращается до &amp;laquo;pen testing&amp;raquo;, потому что (и вы можете процитировать меня по этому поводу) всем программистам в основном двенадцать лет. Иногда компании нанимают этических хакеров, чтобы сделать это, но больше чем несколько хакеров работают внештатно, представляя проблемы, которые они находят в обмен на вознаграждения, выплачиваемые компаниями, которые они &amp;laquo;взламывают&amp;raquo;. Компании с большим бюджетом и умные рекрутеры часто стремятся нанимать лучших хакеров, которые пробуют свои навыки в системах компании. В поисках другого вида хакеров Когда в вашей сети появится что-то странное, кому вы позвоните? Здесь применимо высказывание &amp;laquo;Рыбак рыбака видит издалека&amp;raquo;, может быть, больше, чем в остальной части… жизни. Найм хакеров не только для того, чтобы помочь вам проверить вашу оборону, но и для того, чтобы в первую очередь выстроить их, и выследить злоумышленников - еще один источник больших денег. Конечно, их официальное название, вероятно, будет чем-то вроде &amp;laquo;Эксперта по информационной безопасности&amp;raquo; или, возможно, &amp;laquo;Тейлор Свифт&amp;raquo;. Но не заблуждайтесь, они используют те же навыки и инструменты, что и &amp;laquo;хакеры&amp;raquo;. Хорошо, хорошо, я еще раз объясню это: Тейлор Свифт, в данном случае, псевдоним известного в Twitter ИТ-специалиста, который делает огромную работу, разбивая базовые рекомендации &amp;laquo;infosec&amp;raquo; для всех. Они делают это во время ролевой игры, как настоящий Тейлор Свифт, и пишут короткие фантастические рассказы / фанфики Кортаны. Это Кортана, AI в Halo, или виртуальный помощник, созданный Microsoft? Да. Борьба с катастрофами Вы когда-нибудь были заперты в своем доме, и вам пришлось отправить ребенка, поднимающегося через одно из окон второго этажа? (Я помню, что был этим ребенком. Это было весело.) Или просто вызвали слесаря? В редких случаях все может происходить очень, невероятно неправильно и запереть вас от ваших собственных ИТ-систем. Предполагая, что вы не можете просто отключить устройство от сети и перезагрузить компьютер или попросить своих поставщиков услуг отпустить вас обратно, вы можете нанять хакера. Я сказал, что это было редкостью. Большинство разработчиков программного обеспечения умнее этого. Но что, если вас взломает кто-то, кому вы не заплатили за это, и вы заблокированы, например, во всех своих учетных записях в социальных сетях, а служба поддержки ушла на очень долгий перерыв на кофе? Были времена, когда люди нанимали хакеров, чтобы вернуть им то, что по праву принадлежит им. Такого рода действия в лучшем случае оказываются в серой зоне (Twitter не будет счастлив, когда их взломают, независимо от причины), но ... это происходит. Расширение возможностей подключения означает, что мы нуждаемся в этических хакерах сейчас больше, чем когда-либо Чем больше вашего бизнеса происходит в Интернете, тем больше вам нужно усилить свою безопасность. Может показаться, что этические хакеры в основном просто решают проблему, созданную другими хакерами, и ... это не совсем неправильно. Но это и не их вина. Люди просто люди, и люди иногда делают плохие вещи. Это похоже на то, как люди грабят магазины, и поэтому магазины нанимают охрану. Этические хакеры являются частью экосистемы, потому что они нам нужны. Нам нужно, чтобы они выяснили, как работают наши технологии, чтобы честные компании, ориентированные на получение прибыли, руководствовались данными. Они нужны нам для защиты от злоумышленников и разработки нашего антивирусного и межсетевого программного обеспечения. И, прежде всего, нам нужно, чтобы они провели свои тесты на проникновение вглубь наших сетей и рассказали нам, как трудно в них войти (может, я не программист, но мне тоже двенадцать лет). Главное изображение : Unsplash Перевод статьи &amp;laquo;In Defence of Hacking&amp;raquo;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://codehax.ru/technology/v-zashhitu-hakerstva/1.jpg" /></entry></feed>